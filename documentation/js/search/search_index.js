var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AdminGuard.html",[0,0.748,1,2.023]],["body/injectables/AdminGuard.html",[0,1.269,1,3.434,2,2.109,3,0.449,4,0.388,5,0.388,6,3.706,7,4.463,8,3.685,9,2.994,10,0.578,11,4.448,12,0.617,13,0.033,14,0.578,15,4.448,16,0.388,17,0.064,18,4.448,19,0.028,20,0.028]],["title/controllers/AppController.html",[21,1.253,22,2.023]],["body/controllers/AppController.html",[3,0.429,4,0.371,5,0.371,10,0.553,12,0.6,13,0.033,14,0.553,16,0.371,17,0.061,19,0.027,20,0.027,21,2.069,22,3.342,23,1.688,24,3.543,25,0.429,26,1.128,27,2.936,28,4.895,29,4.253,30,0.921,31,2.258,32,2.936,33,3.543,34,2.448,35,4.253,36,1.008,37,4.253]],["title/modules/AppModule.html",[38,1.644,39,2.023]],["body/modules/AppModule.html",[3,0.323,4,0.279,5,0.279,10,0.415,12,0.704,13,0.034,14,0.415,16,0.279,17,0.046,19,0.022,20,0.022,22,3.153,23,1.72,26,0.692,30,0.692,32,2.961,33,2.663,38,2.258,39,3.886,40,1.516,41,2.258,42,2.663,43,2.663,44,2.663,45,3.271,46,3.271,47,2.779,48,2.049,49,2.049,50,3.197,51,3.135,52,3.135,53,3.197,54,4.335,55,5.274,56,3.197,57,0.692,58,0.517,59,0.415,60,0.692,61,4.335,62,3.612,63,4.335,64,3.197,65,3.197,66,2.312,67,1.385,68,2.312,69,3.197,70,3.197,71,4.335,72,2.663,73,2.049,74,3.197,75,3.197,76,1.84,77,3.197,78,2.495,79,3.197,80,3.197,81,1.385,82,3.197,83,3.197]],["title/injectables/AppService.html",[0,0.748,32,1.644]],["body/injectables/AppService.html",[0,1.266,2,2.102,3,0.447,4,0.387,5,0.387,10,0.576,12,0.51,13,0.033,14,0.576,16,0.387,17,0.063,19,0.028,20,0.028,25,0.447,26,1.157,28,4.965,30,0.959,32,2.784,36,1.05,84,3.693,85,4.433,86,1.508,87,3.693,88,3.693]],["title/controllers/AuthController.html",[21,1.253,89,2.023]],["body/controllers/AuthController.html",[3,0.338,4,0.292,5,0.292,10,0.581,12,0.645,13,0.033,14,0.435,16,0.292,17,0.048,19,0.023,20,0.023,21,1.329,23,1.329,25,0.338,26,0.968,27,3.002,30,0.968,31,1.938,34,1.928,36,1.06,57,0.968,58,0.724,59,0.581,60,0.968,67,1.451,89,2.868,90,2.791,91,2.422,92,3.35,93,3.235,94,3.727,95,2.791,96,2.062,97,2.574,98,4.474,99,3.35,100,2.422,101,2.791,102,4.474,103,3.35,104,2.422,105,2.791,106,2.147,107,2.791,108,2.422,109,2.422,110,2.147,111,2.147,112,1.928,113,2.791,114,2.33,115,2.791,116,3.35,117,3.35,118,3.35,119,3.35,120,3.35,121,1.12,122,3.35,123,2.422,124,3.35,125,2.147,126,3.35,127,1.928,128,3.35,129,1.928,130,1.745,131,3.35]],["title/modules/AuthModule.html",[38,1.644,45,1.816]],["body/modules/AuthModule.html",[3,0.396,4,0.342,5,0.342,12,0.678,13,0.033,14,0.51,16,0.342,17,0.056,19,0.026,20,0.026,23,1.967,38,2.582,40,1.86,41,2.582,45,3.461,47,3.178,48,2.515,49,2.515,51,3.585,52,2.837,58,0.635,66,2.837,67,1.699,89,3.484,96,1.312,114,3.133,115,3.268,132,3.268,133,3.268,134,3.923,135,3.923,136,3.585,137,3.923,138,3.268,139,3.268]],["title/injectables/AuthRepository.html",[0,0.748,114,1.644]],["body/injectables/AuthRepository.html",[0,0.927,2,1.307,3,0.278,4,0.241,5,0.241,9,2.038,10,0.591,12,0.643,13,0.034,14,0.358,16,0.241,17,0.039,19,0.02,20,0.02,25,0.278,26,0.847,27,2.827,30,0.847,31,1.695,36,0.927,57,0.984,58,0.736,59,0.591,60,0.984,67,1.194,93,2.829,94,3.259,95,3.259,96,1.941,100,1.994,101,3.259,109,1.994,110,1.767,111,3.172,112,1.586,113,2.297,114,2.038,121,1.815,123,3.779,125,2.915,127,1.586,130,1.436,140,2.297,141,2.757,142,2.757,143,3.912,144,2.757,145,2.757,146,3.259,147,1.994,148,2.297,149,1.767,150,2.297,151,2.757,152,1.994,153,4.949,154,3.912,155,3.912,156,2.757,157,4.949,158,3.912,159,2.156,160,1.804,161,2.757,162,3.912,163,2.757,164,2.757,165,2.757,166,3.912,167,2.757,168,3.912,169,2.757,170,2.757,171,2.757,172,2.757,173,2.297,174,2.757,175,1.994,176,2.757,177,2.297,178,2.757,179,1.994,180,2.757,181,2.757,182,2.757,183,2.297,184,3.259,185,2.757,186,2.757,187,2.757,188,2.757]],["title/guards/AuthenticationGurad.html",[189,2.283,190,2.023]],["body/guards/AuthenticationGurad.html",[0,1.136,3,0.376,4,0.325,5,0.325,10,0.484,12,0.552,13,0.034,14,0.484,16,0.325,17,0.053,19,0.025,20,0.025,25,0.376,26,1.038,30,0.806,31,2.078,36,0.883,57,0.806,58,0.603,59,0.484,60,0.806,81,1.614,96,1.604,106,2.388,109,3.469,121,1.604,159,1.766,160,1.479,190,3.075,191,2.388,192,3.104,193,4.829,194,3.104,195,4.667,196,3.726,197,3.996,198,3.075,199,4.42,200,2.694,201,2.144,202,3.104,203,3.104,204,3.104,205,3.996,206,3.726,207,3.469,208,3.104,209,3.104,210,2.388]],["title/guards/AuthorizationGuard.html",[8,2.023,189,2.283]],["body/guards/AuthorizationGuard.html",[0,1.032,3,0.325,4,0.281,5,0.281,8,2.793,9,1.678,10,0.642,12,0.371,13,0.034,14,0.419,16,0.281,17,0.046,19,0.022,20,0.022,25,0.325,26,0.943,30,0.943,34,1.854,36,1.032,57,1.069,58,0.799,59,0.642,60,1.069,81,1.396,86,1.607,96,1.457,106,2.065,121,1.652,127,1.854,159,1.527,160,1.278,191,2.065,193,4.408,194,3.63,195,4.408,197,2.684,198,3.166,201,1.854,202,2.684,203,2.684,204,2.684,205,2.684,207,3.151,208,2.684,209,2.684,210,2.793,211,2.684,212,4.358,213,3.222,214,3.222,215,4.358,216,3.222,217,4.358,218,3.222,219,4.358,220,4.358,221,5.826,222,3.222,223,2.33,224,4.358,225,3.222,226,3.222,227,3.222,228,2.33,229,3.222,230,3.222,231,3.63,232,3.222]],["title/classes/Course.html",[17,0.045,233,1.367]],["body/classes/Course.html",[3,0.306,4,0.265,5,0.265,10,0.78,12,0.349,13,0.033,16,0.265,17,0.06,19,0.022,20,0.022,25,0.306,59,0.78,86,1.764,97,3.454,130,2.494,198,2.682,228,3.026,233,1.813,234,1.205,235,2.529,236,2.408,237,3.989,238,3.989,239,3.07,240,3.989,241,3.989,242,3.989,243,3.989,244,3.07,245,3.07,246,2.529,247,3.036,248,5.128,249,3.036,250,3.036,251,3.036,252,3.036,253,4.3,254,3.036,255,3.036,256,3.989,257,3.036,258,2.447,259,3.036,260,4.184,261,4.184,262,3.036,263,3.036,264,3.036,265,3.486,266,2.195,267,3.036,268,3.036]],["title/controllers/CoursesController.html",[21,1.253,76,1.816]],["body/controllers/CoursesController.html",[3,0.257,4,0.222,5,0.222,10,0.658,12,0.5,13,0.034,14,0.331,16,0.222,17,0.036,19,0.019,20,0.019,21,1.01,23,1.01,25,0.257,26,0.8,27,3.18,30,1.097,31,2.466,34,1.465,36,1.252,57,1.033,58,0.772,59,0.62,60,1.033,76,2.126,86,1.631,91,1.841,97,2.915,100,1.841,104,3.144,107,3.078,108,2.671,121,0.851,123,1.841,159,1.751,160,1.466,233,2.628,245,2.368,269,2.121,270,1.841,271,3.078,272,3.078,273,3.45,274,3.623,275,3.623,276,2.121,277,2.546,278,2.121,279,3.694,280,2.546,281,2.402,282,2.546,283,2.121,284,3.694,285,2.546,286,3.974,287,2.121,288,3.974,289,3.694,290,2.546,291,1.632,292,2.546,293,2.121,294,2.546,295,2.121,296,1.924,297,2.121,298,2.546,299,2.546,300,2.546,301,2.121,302,2.546,303,2.546,304,2.546,305,2.121,306,2.546,307,2.546,308,2.546,309,2.546,310,2.546,311,2.546,312,2.546,313,2.546,314,2.546,315,2.546,316,2.546,317,2.546,318,2.546,319,2.546,320,2.546]],["title/modules/CoursesModule.html",[38,1.644,46,1.816]],["body/modules/CoursesModule.html",[3,0.361,4,0.312,5,0.312,12,0.698,13,0.034,14,0.465,16,0.312,17,0.051,19,0.024,20,0.024,23,1.854,38,2.434,40,1.696,41,2.434,46,3.49,47,2.995,48,2.293,49,2.293,51,3.379,52,2.587,58,0.756,66,2.587,67,1.55,76,2.994,78,2.994,138,2.981,139,3.893,233,1.55,296,3.057,297,2.981,321,2.981,322,2.981,323,3.057,324,3.578,325,3.578,326,3.379,327,3.578,328,3.379,329,3.578,330,3.578,331,2.981,332,1.864]],["title/injectables/CoursesRepository.html",[0,0.748,296,1.644]],["body/injectables/CoursesRepository.html",[0,0.915,2,1.285,3,0.273,4,0.236,5,0.236,9,1.411,10,0.722,12,0.565,13,0.034,14,0.352,16,0.236,17,0.039,19,0.02,20,0.02,25,0.273,26,0.836,27,3.01,30,1.168,31,2.46,36,1.278,57,1.168,58,0.874,59,0.701,60,1.168,67,1.174,86,1.69,108,2.794,110,1.737,111,3.147,112,1.559,121,0.906,130,1.411,152,1.959,159,1.285,160,1.533,210,2.477,233,2.57,245,1.737,271,3.219,272,3.219,274,3.219,275,3.219,276,3.219,278,3.219,281,2.328,283,3.219,286,3.219,287,3.219,288,4.09,295,2.257,296,2.013,333,2.257,334,4.91,335,2.794,336,2.71,337,2.71,338,3.864,339,2.71,340,2.71,341,2.71,342,3.219,343,2.71,344,2.71,345,2.71,346,2.71,347,2.71,348,2.71,349,2.71,350,2.71,351,2.71,352,2.71,353,2.71]],["title/classes/FallBackExceptionFilter.html",[17,0.045,354,2.283]],["body/classes/FallBackExceptionFilter.html",[3,0.39,4,0.337,5,0.337,10,0.502,12,0.445,13,0.033,14,0.502,16,0.337,17,0.055,19,0.025,20,0.025,25,0.39,26,1.063,30,0.836,36,0.915,57,0.836,58,0.625,59,0.502,60,0.836,81,2.127,121,1.292,201,3.105,223,2.793,234,1.533,354,3.55,355,3.218,356,3.902,357,3.64,358,3.55,359,4.106,360,3.863,361,3.55,362,3.863,363,3.863,364,3.863,365,3.218,366,2.793,367,2.793,368,2.793,369,2.793,370,3.863,371,2.793,372,3.863,373,2.793,374,3.863,375,3.218,376,4.909,377,3.863,378,3.218,379,3.863]],["title/injectables/GetUserMiddleware.html",[0,0.748,73,2.023]],["body/injectables/GetUserMiddleware.html",[0,1.107,2,1.696,3,0.361,4,0.312,5,0.312,10,0.465,12,0.599,13,0.034,14,0.465,16,0.312,17,0.051,19,0.024,20,0.024,25,0.361,26,1.011,30,0.774,36,0.848,57,0.774,58,0.579,59,0.465,60,0.774,62,4.596,73,2.995,81,1.55,96,1.914,121,1.563,147,3.379,148,2.981,149,2.293,150,2.981,173,2.981,177,2.981,357,2.293,380,3.893,381,2.981,382,3.893,383,4.673,384,5.203,385,5.723,386,3.578,387,3.578,388,2.981,389,4.673,390,5.203,391,3.578,392,3.578,393,3.578,394,3.578,395,3.578,396,3.578,397,3.578,398,4.673,399,3.578]],["title/classes/HttpExceptionFilter.html",[17,0.045,400,2.283]],["body/classes/HttpExceptionFilter.html",[3,0.39,4,0.337,5,0.337,10,0.502,12,0.445,13,0.033,14,0.502,16,0.337,17,0.055,19,0.025,20,0.025,25,0.39,26,1.063,30,0.836,36,0.915,57,0.836,58,0.625,59,0.502,60,0.836,81,2.127,106,2.476,121,1.642,201,3.105,234,1.533,356,3.902,357,3.459,358,3.55,359,4.106,361,3.55,365,3.218,366,2.793,367,2.793,368,2.793,369,2.793,371,3.55,373,2.793,375,3.218,400,3.902,401,3.218,402,3.863,403,3.863,404,3.863,405,3.863,406,3.863,407,3.863,408,3.863,409,3.863,410,3.863,411,3.863,412,3.863]],["title/classes/Lesson.html",[17,0.045,332,1.644]],["body/classes/Lesson.html",[3,0.412,4,0.357,5,0.357,10,0.775,13,0.032,16,0.357,17,0.059,19,0.026,20,0.026,25,0.412,59,0.775,86,1.435,130,2.885,234,1.622,236,2.927,239,3.55,244,3.55,258,2.953,281,2.626,332,2.65,413,3.406,414,4.614,415,4.088,416,4.088,417,4.088,418,4.088,419,4.088]],["title/controllers/LessonsController.html",[21,1.253,78,1.816]],["body/controllers/LessonsController.html",[1,1.994,3,0.314,4,0.271,5,0.271,10,0.63,12,0.629,13,0.034,14,0.404,16,0.271,17,0.045,19,0.022,20,0.022,21,1.234,23,1.234,25,0.314,26,0.921,30,0.921,31,2.259,34,1.79,36,1.008,57,0.673,58,0.503,59,0.404,60,0.673,78,2.448,86,1.54,91,2.249,97,2.448,105,2.591,159,2.017,160,1.689,190,1.994,258,2.472,281,2.299,291,1.994,293,2.591,301,2.591,323,2.216,331,2.591,332,1.62,420,2.591,421,1.994,422,5.214,423,4.85,424,3.11,425,3.11,426,3.11,427,4.697,428,4.344,429,4.344,430,4.255,431,3.11,432,2.591,433,1.994,434,4.255,435,3.077,436,3.545,437,4.85,438,3.11,439,2.591,440,3.11,441,3.11,442,3.11,443,3.11,444,3.11,445,3.11,446,3.11,447,3.11,448,3.11,449,3.11,450,3.11,451,4.255,452,4.255,453,3.11,454,3.11,455,3.11]],["title/injectables/LessonsRepository.html",[0,0.748,323,1.644]],["body/injectables/LessonsRepository.html",[0,1.036,2,1.535,3,0.327,4,0.283,5,0.283,9,1.687,10,0.643,12,0.61,13,0.033,14,0.421,16,0.283,17,0.046,19,0.023,20,0.023,25,0.327,26,0.947,27,2.972,30,0.947,31,2.297,36,1.036,57,0.947,58,0.708,59,0.568,60,0.947,67,1.403,86,1.609,110,2.076,111,3.399,112,1.863,152,2.342,223,2.342,233,1.403,244,2.076,258,2.705,281,2.514,323,2.278,332,1.687,421,2.076,427,4.613,428,4.613,429,4.754,439,2.698,456,2.698,457,5.302,458,4.951,459,3.238,460,3.238,461,4.373,462,3.238,463,3.238,464,3.238,465,3.238,466,3.238,467,4.373,468,3.238,469,3.238,470,3.238,471,3.238]],["title/classes/ToIntegerPipe.html",[17,0.045,472,2.283]],["body/classes/ToIntegerPipe.html",[3,0.397,4,0.343,5,0.343,10,0.511,12,0.453,13,0.033,14,0.511,16,0.343,17,0.056,19,0.026,20,0.026,25,0.397,26,1.075,30,0.852,36,0.932,57,0.852,58,0.637,59,0.511,60,0.852,81,2.152,86,1.535,121,1.316,159,1.866,160,1.562,234,1.562,258,2.58,291,2.522,433,3.184,472,3.592,473,4.138,474,3.278,475,5.443,476,4.967,477,4.967,478,4.534,479,5.717,480,3.935,481,4.967,482,3.935,483,3.935,484,3.935,485,3.935]],["title/classes/User.html",[17,0.045,96,1.056]],["body/classes/User.html",[3,0.39,4,0.337,5,0.337,10,0.738,12,0.445,13,0.033,16,0.337,17,0.07,19,0.025,20,0.025,25,0.39,59,0.738,86,1.737,96,1.642,97,3.267,125,3.459,127,3.105,129,3.105,130,2.811,234,1.533,236,2.825,246,3.218,248,4.991,253,3.218,256,3.218,265,4.09,266,2.793,486,3.218,487,3.863,488,3.863,489,5.396,490,3.863,491,3.863]],["title/classes/ValidationException.html",[17,0.045,492,2.023]],["body/classes/ValidationException.html",[3,0.425,4,0.367,5,0.367,7,4.316,9,2.193,10,0.673,12,0.485,13,0.033,14,0.547,16,0.367,17,0.06,19,0.027,20,0.027,25,0.425,57,0.911,58,0.682,59,0.673,60,0.911,86,1.651,234,1.671,236,2.981,291,3.598,492,3.321,493,3.508,494,5.181,495,4.878,496,4.211,497,4.211,498,4.211,499,4.211,500,4.211]],["title/classes/ValidationFilter.html",[17,0.045,501,2.283]],["body/classes/ValidationFilter.html",[3,0.396,4,0.342,5,0.342,10,0.51,12,0.571,13,0.033,14,0.51,16,0.342,17,0.056,19,0.026,20,0.026,25,0.396,26,1.073,30,0.849,36,0.929,57,0.849,58,0.635,59,0.51,60,0.849,81,2.147,121,1.312,201,3.127,234,1.557,356,3.93,357,3.484,358,3.585,359,4.129,361,2.837,366,2.837,367,2.837,368,2.837,369,2.837,371,2.837,373,2.837,492,3.66,495,3.268,501,3.93,502,3.268,503,3.923,504,3.923,505,3.923,506,3.923,507,3.923,508,3.923]],["title/coverage.html",[509,3.108]],["body/coverage.html",[0,1.247,1,1.615,5,0.22,6,2.099,8,1.615,13,0.033,17,0.08,19,0.019,20,0.019,21,1.884,22,1.615,24,2.099,32,1.313,59,0.327,68,1.822,73,1.615,76,1.45,78,1.45,84,2.099,89,1.615,90,2.099,96,0.843,114,1.313,136,1.822,140,2.099,149,1.615,160,1,189,2.652,190,1.615,192,2.099,211,2.099,233,1.092,235,2.099,269,2.099,270,1.822,273,1.822,296,1.313,323,1.313,326,1.822,328,1.822,332,1.313,333,2.099,335,1.822,354,1.822,355,2.099,380,2.099,381,2.099,388,4.204,400,1.822,401,2.099,413,2.099,420,2.099,421,1.615,435,4.658,456,2.099,472,1.822,473,2.099,474,2.099,486,2.099,492,1.615,493,2.099,501,1.822,502,2.099,509,1.822,510,2.52,511,2.52,512,2.52,513,5.678,514,4.324,515,2.52,516,4.324,517,2.099,518,5.966,519,6.13,520,2.099,521,2.099,522,3.667,523,2.52,524,2.52,525,2.099,526,2.099,527,3.93,528,3.93,529,2.099,530,2.099,531,2.099,532,2.099,533,2.099,534,4.204,535,4.204,536,2.099,537,2.099,538,2.099,539,2.099,540,2.52,541,2.52,542,2.099,543,2.52,544,2.52]],["title/dependencies.html",[41,1.976,545,2.641]],["body/dependencies.html",[13,0.034,14,0.496,17,0.07,19,0.025,20,0.025,41,1.988,67,1.653,72,3.179,112,2.196,129,2.196,146,3.179,147,2.759,184,3.179,200,2.759,266,2.759,478,3.179,546,5.653,547,3.816,548,3.816,549,3.816,550,3.816,551,3.816,552,3.816,553,3.816,554,3.816,555,4.058,556,3.816,557,3.816,558,3.816,559,3.816,560,3.179,561,3.816,562,3.816,563,3.816,564,3.816,565,3.816,566,3.179,567,3.816,568,3.816,569,5.366,570,3.816,571,3.816,572,3.816,573,3.816,574,3.816,575,3.816,576,3.816,577,3.816,578,3.816,579,3.816,580,3.816,581,3.816,582,3.816,583,3.816]],["title/miscellaneous/enumerations.html",[584,1.376,585,3.161]],["body/miscellaneous/enumerations.html",[13,0.031,19,0.029,20,0.029,25,0.481,96,1.867,231,4.651,433,3.578,584,2.483,585,3.972,586,4.768,587,4.768,588,5.582]],["title/miscellaneous/functions.html",[584,1.376,589,2.743]],["body/miscellaneous/functions.html",[13,0.031,19,0.026,20,0.026,25,0.414,57,1.201,58,0.898,59,0.721,60,1.201,86,1.636,129,2.933,179,2.966,258,2.751,273,4.011,281,2.417,335,3.686,342,3.417,527,2.966,528,4.315,529,4.247,530,4.247,532,3.417,533,4.621,584,2.136,589,2.966,590,4.834,591,4.101,592,4.101,593,4.101]],["title/index.html",[25,0.266,594,2.641,595,2.641]],["body/index.html",[4,0.322,13,0.033,19,0.025,20,0.025,239,2.367,509,2.671,596,3.077,597,3.693,598,4.77,599,3.077,600,3.693,601,3.693,602,3.077,603,3.077,604,3.077,605,5.283,606,3.077,607,3.693,608,3.693,609,3.077,610,5.019,611,3.693,612,3.077,613,3.077,614,4.932,615,3.693,616,3.693,617,3.974,618,3.693,619,3.693,620,3.693,621,3.077,622,4.77,623,3.974,624,3.077,625,3.693,626,3.693,627,4.77,628,4.77,629,3.693,630,3.693,631,3.693,632,3.693,633,3.693,634,3.077,635,3.693,636,3.693,637,3.693,638,3.693,639,3.693,640,3.693,641,3.693,642,3.693,643,3.693,644,3.693,645,3.693,646,3.693,647,3.693,648,3.693,649,3.693,650,3.693,651,3.693,652,3.693]],["title/modules.html",[40,2.038]],["body/modules.html",[13,0.029,19,0.029,20,0.029,39,3.045,40,2.252,45,2.733,46,2.733,634,4.924,653,5.91,654,5.91,655,5.91]],["title/overview.html",[656,3.581]],["body/overview.html",[2,1.919,13,0.032,19,0.026,20,0.026,23,1.607,32,2.872,39,3.985,40,1.919,41,2.634,42,3.373,43,3.373,44,3.373,45,3.421,46,3.539,47,3.241,48,2.595,49,2.595,114,2.872,132,3.373,133,3.373,175,2.928,191,2.595,234,1.607,296,2.872,321,3.373,322,3.373,323,2.872,656,3.373,657,3.373,658,3.373,659,3.373,660,3.373]],["title/miscellaneous/variables.html",[584,1.376,661,3.161]],["body/miscellaneous/variables.html",[13,0.033,16,0.05,19,0.005,20,0.005,23,0.227,25,0.058,40,0.271,58,0.171,59,0.461,68,0.763,86,1.105,87,0.879,88,0.879,93,0.414,96,0.353,104,0.414,125,0.676,127,0.329,129,0.844,136,0.763,149,0.676,160,0.847,175,2.663,179,0.414,183,3.51,191,0.367,198,0.367,199,0.879,200,1.918,207,0.414,210,1.169,228,2.566,233,2.215,236,0.329,237,3.171,238,0.477,239,3.825,240,3.171,241,2.701,242,3.171,243,3.068,244,3.82,245,2.58,258,0.5,270,1.061,281,2.761,305,4.965,326,0.763,328,0.763,378,0.879,382,1.222,414,4.861,421,0.941,432,3.171,433,2.361,435,0.414,436,3.821,517,0.477,520,0.477,521,0.477,525,0.477,526,0.477,527,0.414,528,1.319,531,0.879,534,0.477,535,2.007,536,1.779,537,0.879,538,0.879,539,0.879,542,0.879,555,0.477,560,0.477,566,1.222,584,0.298,589,1.061,590,1.222,596,0.879,599,0.879,602,0.879,603,0.879,604,1.519,606,1.779,609,0.477,610,1.519,612,0.477,613,1.779,614,0.477,617,0.477,621,0.477,623,0.477,624,0.477,657,2.957,658,3.766,659,3.821,660,3.068,661,0.477,662,2.135,663,0.572,664,1.055,665,0.572,666,0.572,667,0.572,668,2.87,669,0.572,670,0.572,671,1.055,672,0.572,673,1.055,674,0.572,675,0.572,676,1.055,677,0.572,678,0.572,679,1.055,680,1.467,681,0.572,682,0.572,683,0.572,684,0.572,685,3.806,686,1.467,687,2.409,688,1.055,689,1.467,690,0.572,691,1.055,692,0.572,693,5.332,694,1.824,695,2.135,696,1.055,697,3.242,698,1.055,699,0.572,700,1.824,701,3.242,702,3.242,703,2.135,704,1.467,705,1.467,706,3.242,707,1.055,708,0.572,709,1.467,710,0.572,711,0.572,712,0.572,713,1.055,714,1.055,715,0.572,716,4.706,717,2.135,718,0.572,719,0.572,720,0.572,721,0.572,722,0.572,723,1.055,724,0.572,725,2.87,726,2.87,727,2.653,728,1.467,729,1.467,730,2.135,731,0.572,732,1.055,733,0.572,734,0.572,735,0.572,736,0.572,737,0.572,738,1.055,739,1.467,740,2.87,741,0.572,742,2.409,743,1.467,744,0.572,745,1.055,746,0.572,747,0.572,748,2.409,749,0.572,750,0.572,751,0.572,752,1.467,753,0.572,754,0.572,755,0.572,756,0.572,757,1.467,758,3.92,759,3.549,760,2.409,761,2.135,762,0.572,763,0.572,764,2.135,765,1.467,766,0.572,767,0.572,768,0.572,769,0.572,770,0.572,771,2.653,772,2.653,773,4.377,774,2.409,775,0.572,776,0.572,777,0.572,778,1.824,779,0.572,780,0.572,781,0.572,782,0.572,783,3.066,784,1.055,785,0.572,786,0.572,787,3.403,788,0.572,789,0.572,790,0.572,791,1.467,792,1.824,793,1.467,794,0.572,795,0.572,796,1.467,797,0.572,798,1.055,799,0.572,800,0.572,801,0.572,802,1.467,803,1.467,804,1.824,805,1.055,806,0.572,807,3.242,808,0.572,809,0.572,810,1.055,811,0.572,812,0.572,813,1.467,814,1.055,815,1.055,816,1.055,817,0.572,818,0.572,819,0.572,820,0.572,821,0.572,822,0.572,823,0.572,824,0.572,825,0.572,826,0.572,827,0.572,828,1.055,829,1.055,830,0.572,831,0.572,832,0.572,833,0.572,834,0.572,835,0.572,836,0.572,837,0.572,838,0.572,839,0.572,840,1.467,841,1.824,842,0.572,843,1.055,844,0.572,845,0.572,846,1.055,847,0.572,848,1.055,849,1.055,850,0.572,851,0.572,852,0.572,853,0.572,854,0.572,855,1.055,856,0.572,857,0.572,858,0.572,859,0.572,860,1.055,861,1.467,862,3.403,863,0.572,864,1.055,865,1.055,866,0.572,867,1.055,868,1.824,869,0.572,870,0.572,871,0.572,872,1.055,873,0.572,874,2.135,875,0.572,876,1.055,877,2.653,878,0.572,879,0.572,880,0.572,881,1.055,882,0.572,883,1.055,884,0.572,885,0.572,886,0.572,887,0.572,888,0.572,889,1.055,890,0.572,891,1.055,892,2.409,893,0.572,894,0.572,895,1.055,896,0.572,897,1.055,898,0.572,899,0.572,900,1.055,901,1.055,902,0.572,903,0.572,904,1.055,905,0.572,906,0.572,907,0.572,908,0.572,909,1.055,910,0.572,911,1.055,912,1.055,913,0.572,914,0.572,915,1.055,916,0.572,917,1.055,918,0.572,919,0.572,920,1.055,921,0.572,922,1.055,923,1.055,924,0.572,925,1.467,926,1.055,927,1.467,928,1.055,929,1.055,930,1.055,931,1.055,932,0.572,933,1.055,934,1.055,935,0.572,936,2.135,937,1.055,938,1.055,939,1.055,940,1.055,941,1.055,942,1.055,943,0.572,944,1.055,945,1.055,946,0.572,947,1.055,948,1.055,949,0.572,950,1.055,951,1.055,952,1.055,953,1.055,954,1.055,955,1.055,956,1.055,957,1.467,958,1.055,959,0.572,960,0.572,961,0.572,962,1.055,963,1.055,964,0.572,965,0.572,966,1.055,967,0.572,968,1.055,969,1.055,970,0.572,971,0.572,972,1.055,973,1.055,974,0.572,975,1.055,976,1.055,977,1.055,978,0.572,979,0.572,980,1.055,981,0.572,982,1.055,983,0.572,984,1.055,985,1.055,986,0.572,987,1.055,988,0.572,989,1.055,990,0.572,991,1.055,992,0.572,993,0.572,994,0.572,995,0.572,996,1.055,997,0.572,998,0.572,999,1.055,1000,0.572,1001,0.572,1002,0.572,1003,1.055,1004,0.572,1005,0.572,1006,0.572,1007,1.055,1008,0.572,1009,1.055,1010,0.572,1011,0.572,1012,0.572,1013,1.055,1014,1.055,1015,0.572,1016,0.572,1017,0.572,1018,1.055,1019,0.572,1020,1.055,1021,0.572,1022,1.055,1023,0.572,1024,1.055,1025,0.572,1026,0.572,1027,0.572,1028,1.055,1029,0.572,1030,0.572,1031,1.055,1032,0.572,1033,1.055,1034,0.572,1035,0.572,1036,1.055,1037,0.572,1038,1.055,1039,0.572,1040,0.572,1041,1.055,1042,0.572,1043,0.572,1044,0.572,1045,0.572,1046,1.467,1047,0.572,1048,1.467,1049,0.572,1050,0.572,1051,0.572,1052,0.572,1053,0.572]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":435,"title":{},"body":{"controllers/LessonsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["03:57",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04:17",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04:44",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04:53",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05:46",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06:00",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06:05",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06:07",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06:08",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06:31",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07:19",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08:19",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08:50",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09:14",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09:50",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["1.amazonaws.com/angular",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.amazonaws.com/course",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":183,"title":{},"body":{"injectables/AuthRepository.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["10:17",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12:12",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13:22",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:26",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":175,"title":{},"body":{"injectables/AuthRepository.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2:07",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2:08",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2:33",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2:55",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":657,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3:27",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3:42",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":658,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":507,"title":{},"body":{"classes/ValidationFilter.html":{}}}],["41",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:01",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:07",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:17",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:29",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:38",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:39",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:44",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":436,"title":{},"body":{"controllers/LessonsController.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":372,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["51",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["53",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["58",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5:12",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5:15",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5:31",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5:38",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5:52",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":659,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["6.1.8",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["67",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["68",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6:28",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6:37",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6:38",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6:43",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6:53",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6:59",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.0",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["7:05",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7:07",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7:08",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7:28",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7:32",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7:47",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7:54",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":660,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["8:16",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8:17",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8:19",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.2",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["9:10",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9:22",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"classes/Course.html":{},"injectables/CoursesRepository.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["academy.s3.amazonaws.com/thumbnails/advanced_angular",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["academy.s3.amazonaws.com/thumbnails/angular2",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["academy.s3.amazonaws.com/thumbnails/typescript",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["academy/blog/images/rxjs",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":207,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["acs",{"_index":434,"title":{},"body":{"controllers/LessonsController.html":{}}}],["action",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activate",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addcourse",{"_index":271,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["addcourse(@body",{"_index":318,"title":{},"body":{"controllers/CoursesController.html":{}}}],["addcourse(course",{"_index":276,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["admin",{"_index":588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["adminguard",{"_index":1,"title":{"injectables/AdminGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/LessonsController.html":{},"coverage.html":{}}}],["advanced",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed",{"_index":221,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["allowedroles",{"_index":215,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["already",{"_index":180,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["always",{"_index":268,"title":{},"body":{"classes/Course.html":{}}}],["amazing",{"_index":635,"title":{},"body":{"index.html":{}}}],["angular",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angularfire",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":612,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":22,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":604,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apply",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply(getusermiddleware",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appservice",{"_index":32,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argumentmetadata",{"_index":479,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["argumentshost",{"_index":359,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["asc",{"_index":451,"title":{},"body":{"controllers/LessonsController.html":{}}}],["async",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"injectables/LessonsRepository.html":{}}}],["attacks",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/auth.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":89,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticate(email",{"_index":592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authenticated",{"_index":208,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["authenticated,denying",{"_index":206,"title":{},"body":{"guards/AuthenticationGurad.html":{}}}],["authentication",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationgurad",{"_index":190,"title":{"guards/AuthenticationGurad.html":{}},"body":{"guards/AuthenticationGurad.html":{},"controllers/LessonsController.html":{},"coverage.html":{}}}],["authjwttoken",{"_index":390,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["authmodule",{"_index":45,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":645,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization.guard",{"_index":15,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["authorizationguard",{"_index":8,"title":{"guards/AuthorizationGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["authorized",{"_index":224,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["authrepository",{"_index":114,"title":{"injectables/AuthRepository.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"controllers/CoursesController.html":{}}}],["backend",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backers",{"_index":636,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":291,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/LessonsController.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationException.html":{}}}],["badrequestexception(\"can't",{"_index":303,"title":{},"body":{"controllers/CoursesController.html":{}}}],["badrequestexception('conversion",{"_index":484,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["badrequestexception('courseid",{"_index":450,"title":{},"body":{"controllers/LessonsController.html":{}}}],["badrequestexception('sort",{"_index":453,"title":{},"body":{"controllers/LessonsController.html":{}}}],["bcrypt",{"_index":146,"title":{},"body":{"injectables/AuthRepository.html":{},"dependencies.html":{}}}],["bcrypt.compare(user.password",{"_index":163,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["bcrypt.gensalt(saltorrounds",{"_index":185,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["bcrypt.hash(user.password",{"_index":187,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["beginner",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beginners",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CoursesController.html":{}}}],["boolean",{"_index":198,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":533,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":655,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":653,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":599,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":560,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":193,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["canactivate(context",{"_index":194,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["catch",{"_index":357,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["catch(exception",{"_index":358,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["catch(httpexception",{"_index":404,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(validationexception",{"_index":505,"title":{},"body":{"classes/ValidationFilter.html":{}}}],["category",{"_index":237,"title":{},"body":{"classes/Course.html":{},"miscellaneous/variables.html":{}}}],["changes",{"_index":288,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["changes._id",{"_index":302,"title":{},"body":{"controllers/CoursesController.html":{}}}],["choosing",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chrome",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":17,"title":{"classes/Course.html":{},"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":234,"title":{},"body":{"classes/Course.html":{},"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"overview.html":{}}}],["client",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":321,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":322,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["code",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collections",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complexity",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["composition",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log",{"_index":223,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/LessonsRepository.html":{}}}],["console.log(\"password",{"_index":165,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["console.log(\"user",{"_index":156,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["console.log('checking",{"_index":230,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["console.log('comparing",{"_index":226,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["console.log('creating",{"_index":319,"title":{},"body":{"controllers/CoursesController.html":{}}}],["console.log('error",{"_index":399,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["console.log('finding",{"_index":311,"title":{},"body":{"controllers/CoursesController.html":{}}}],["console.log('found",{"_index":395,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["console.log('here",{"_index":392,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["console.log('http",{"_index":405,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["console.log('user",{"_index":205,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["const",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationFilter.html":{}}}],["constants",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["constants/constants",{"_index":150,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/GetUserMiddleware.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthRepository.html":{},"guards/AuthorizationGuard.html":{},"injectables/CoursesRepository.html":{},"injectables/LessonsRepository.html":{},"classes/ValidationException.html":{}}}],["constructor(@injectmodel('course",{"_index":346,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["constructor(@injectmodel('lesson",{"_index":465,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["constructor(allowedroles",{"_index":213,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["constructor(coursemodel",{"_index":336,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["constructor(lessonmodel",{"_index":459,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["constructor(private",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"controllers/LessonsController.html":{}}}],["constructor(public",{"_index":499,"title":{},"body":{"classes/ValidationException.html":{}}}],["constructor(usermodel",{"_index":141,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["constructor(validationerrors",{"_index":496,"title":{},"body":{"classes/ValidationException.html":{}}}],["consumer",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":197,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["context.switchtohttp",{"_index":202,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["controller",{"_index":21,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CoursesController.html":{},"controllers/LessonsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CoursesController.html":{},"controllers/LessonsController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('courses",{"_index":298,"title":{},"body":{"controllers/CoursesController.html":{}}}],["controller('lessons",{"_index":442,"title":{},"body":{"controllers/LessonsController.html":{}}}],["controllers",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"controllers/LessonsController.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["controllers/auth.controller",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers/courses.controller",{"_index":325,"title":{},"body":{"modules/CoursesModule.html":{}}}],["controllers/lessons.controller",{"_index":330,"title":{},"body":{"modules/CoursesModule.html":{}}}],["core",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["couldn't",{"_index":314,"title":{},"body":{"controllers/CoursesController.html":{}}}],["counter",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cours",{"_index":312,"title":{},"body":{"controllers/CoursesController.html":{}}}],["course",{"_index":233,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"injectables/LessonsRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course.png",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courseid",{"_index":281,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["courselisticon",{"_index":238,"title":{},"body":{"classes/Course.html":{},"miscellaneous/variables.html":{}}}],["coursemodel",{"_index":338,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["courses",{"_index":270,"title":{},"body":{"controllers/CoursesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courses/controllers/courses.controller",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["courses/controllers/lessons.controller",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["courses/courses.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":76,"title":{"controllers/CoursesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["coursesdb",{"_index":299,"title":{},"body":{"controllers/CoursesController.html":{}}}],["coursesmodule",{"_index":46,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesrepository",{"_index":296,"title":{"injectables/CoursesRepository.html":{}},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"coverage.html":{},"overview.html":{}}}],["coursesschema",{"_index":326,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseurl",{"_index":286,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["cover",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":509,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdby",{"_index":373,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["createduser",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["createduser._id",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["createduser.roles",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["createduser.username",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["crud",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cryptographic",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":366,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["ctx.getrequest",{"_index":408,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":369,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["custom",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.ts",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":176,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["db.ts",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbname",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbucq.gcp.mongodb.net",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"controllers/LessonsController.html":{},"classes/User.html":{}}}],["deep",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":432,"title":{},"body":{"controllers/LessonsController.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["define",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":10,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{}}}],["delete",{"_index":292,"title":{},"body":{"controllers/CoursesController.html":{}}}],["delete(':courseid",{"_index":279,"title":{},"body":{"controllers/CoursesController.html":{}}}],["deletecourse",{"_index":272,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["deletecourse(@param('courseid",{"_index":316,"title":{},"body":{"controllers/CoursesController.html":{}}}],["deletecourse(courseid",{"_index":278,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["demo",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["denying",{"_index":225,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":239,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailed",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details",{"_index":396,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["dev",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":613,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["devtools",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directives",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatching",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dive",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["documents",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":157,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["doing",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["don't",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloading",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dsc",{"_index":452,"title":{},"body":{"controllers/LessonsController.html":{}}}],["duration",{"_index":414,"title":{},"body":{"classes/Lesson.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":398,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["e2e",{"_index":624,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ecosystem",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effects",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":600,"title":{},"body":{"index.html":{}}}],["email",{"_index":179,"title":{},"body":{"injectables/AuthRepository.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["emitters",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":585,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":378,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["errormessage",{"_index":375,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["essential",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["establish",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["examples",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exception",{"_index":361,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["exception.getstatus",{"_index":409,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":376,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["exception.response.message",{"_index":412,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.validationerrors",{"_index":508,"title":{},"body":{"classes/ValidationFilter.html":{}}}],["exceptionfilter",{"_index":356,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["executioncontext",{"_index":195,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["exercise",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":158,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["exists",{"_index":181,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["expiresin",{"_index":174,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["export",{"_index":16,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":555,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extended",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"injectables/AdminGuard.html":{},"classes/ValidationException.html":{}}}],["external",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facebook",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":485,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["failing",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback",{"_index":362,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["fallbackexception",{"_index":374,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["fallbackexceptionfilter",{"_index":354,"title":{"classes/FallBackExceptionFilter.html":{}},"body":{"classes/FallBackExceptionFilter.html":{},"coverage.html":{}}}],["false",{"_index":228,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"miscellaneous/variables.html":{}}}],["familiar",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["famous",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"coverage.html":{}}}],["filter",{"_index":363,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["findall",{"_index":334,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["findallcourses",{"_index":273,"title":{},"body":{"controllers/CoursesController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["findcourse(@param('courseid",{"_index":308,"title":{},"body":{"controllers/CoursesController.html":{}}}],["findcoursebyid",{"_index":335,"title":{},"body":{"injectables/CoursesRepository.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["findcoursebyid(courseid",{"_index":342,"title":{},"body":{"injectables/CoursesRepository.html":{},"miscellaneous/functions.html":{}}}],["findcoursebyurl",{"_index":274,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["findcoursebyurl(courseurl",{"_index":283,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["findlessonsforcourse",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findlessonsforcourse(courseid",{"_index":593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firebase",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestore",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flow",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flux",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":220,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["format",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes(coursescontroller",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":315,"title":{},"body":{"controllers/CoursesController.html":{}}}],["framework",{"_index":598,"title":{},"body":{"index.html":{}}}],["function",{"_index":388,"title":{},"body":{"injectables/GetUserMiddleware.html":{},"coverage.html":{}}}],["functionality",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functions",{"_index":589,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fundamentals",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('')@useguards(adminguard",{"_index":424,"title":{},"body":{"controllers/LessonsController.html":{}}}],["get('/:courseid",{"_index":307,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('/:courseurl",{"_index":284,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get(':courseid",{"_index":430,"title":{},"body":{"controllers/LessonsController.html":{}}}],["getall",{"_index":457,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["getalllessons",{"_index":422,"title":{},"body":{"controllers/LessonsController.html":{}}}],["gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":594,"title":{"index.html":{}},"body":{}}],["getusermiddleware",{"_index":73,"title":{"injectables/GetUserMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetUserMiddleware.html":{},"coverage.html":{}}}],["git",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granting",{"_index":209,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["grow",{"_index":631,"title":{},"body":{"index.html":{}}}],["guard",{"_index":189,"title":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":191,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["guards/admin.guard",{"_index":441,"title":{},"body":{"controllers/LessonsController.html":{}}}],["guards/authentication.gurad",{"_index":440,"title":{},"body":{"controllers/LessonsController.html":{}}}],["guide",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guided",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handler",{"_index":406,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["handling",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["hashes",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashing",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helicopter",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hello",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":642,"title":{},"body":{"index.html":{}}}],["hood",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":201,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["host.getrequest",{"_index":203,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["host.switchtohttp",{"_index":367,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["hosting",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hot",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":403,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":400,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://angular",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":649,"title":{},"body":{"index.html":{}}}],["https://s3",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":240,"title":{},"body":{"classes/Course.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":305,"title":{},"body":{"controllers/CoursesController.html":{},"miscellaneous/variables.html":{}}}],["ide",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["identifiers",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/angular",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/material_design.png",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/nestjs",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/ngrx",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/rxjs",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/security",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/serverless",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implementation",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implementing",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationFilter.html":{}}}],["import",{"_index":12,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{}}}],["important",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importing",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{}}}],["including",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{}}}],["initial",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AdminGuard.html":{},"injectables/AppService.html":{},"injectables/AuthRepository.html":{},"injectables/CoursesRepository.html":{},"injectables/GetUserMiddleware.html":{},"injectables/LessonsRepository.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AppService.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"injectables/CoursesRepository.html":{},"injectables/GetUserMiddleware.html":{},"injectables/LessonsRepository.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AppService.html":{},"injectables/AuthRepository.html":{},"injectables/CoursesRepository.html":{},"injectables/GetUserMiddleware.html":{},"injectables/LessonsRepository.html":{},"overview.html":{}}}],["injectmodel",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/CoursesRepository.html":{},"injectables/LessonsRepository.html":{}}}],["injectmodel('user",{"_index":151,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["inline",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inputs",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inside",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["installation",{"_index":609,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["installing",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["installrunning",{"_index":611,"title":{},"body":{"index.html":{}}}],["integer.pipe.ts",{"_index":474,"title":{},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["integer.pipe.ts:8",{"_index":480,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["interaction",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interception",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interceptors",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interesting",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["introduction",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isallowed",{"_index":212,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["isallowed(userroles",{"_index":217,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["isarray",{"_index":489,"title":{},"body":{"classes/User.html":{}}}],["isboolean",{"_index":256,"title":{},"body":{"classes/Course.html":{},"classes/User.html":{}}}],["isint",{"_index":253,"title":{},"body":{"classes/Course.html":{},"classes/User.html":{}}}],["isint({message",{"_index":259,"title":{},"body":{"classes/Course.html":{}}}],["ismatch",{"_index":162,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["ismongoid",{"_index":265,"title":{},"body":{"classes/Course.html":{},"classes/User.html":{}}}],["isnan(val",{"_index":483,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["isolation",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstring",{"_index":248,"title":{},"body":{"classes/Course.html":{},"classes/User.html":{}}}],["isstring()@ismongoid",{"_index":246,"title":{},"body":{"classes/Course.html":{},"classes/User.html":{}}}],["isstring({always",{"_index":263,"title":{},"body":{"classes/Course.html":{}}}],["jasmine",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":638,"title":{},"body":{"index.html":{}}}],["json.stringify(exception",{"_index":365,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["jsonwebtoken",{"_index":148,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/GetUserMiddleware.html":{}}}],["jwt",{"_index":147,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/GetUserMiddleware.html":{},"dependencies.html":{}}}],["jwt.sign",{"_index":169,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["jwt.verify(authjwttoken",{"_index":394,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["jwtconstants",{"_index":149,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/GetUserMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":173,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/GetUserMiddleware.html":{}}}],["jwttoken",{"_index":168,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["kamil",{"_index":646,"title":{},"body":{"index.html":{}}}],["kick",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laboratory",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layer",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["learn",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lesson",{"_index":332,"title":{"classes/Lesson.html":{}},"body":{"modules/CoursesModule.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"coverage.html":{}}}],["lessondb",{"_index":444,"title":{},"body":{"controllers/LessonsController.html":{}}}],["lessonmodel",{"_index":461,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["lessons",{"_index":421,"title":{},"body":{"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonscontroller",{"_index":78,"title":{"controllers/LessonsController.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"controllers/LessonsController.html":{},"coverage.html":{}}}],["lessonscount",{"_index":241,"title":{},"body":{"classes/Course.html":{},"miscellaneous/variables.html":{}}}],["lessonsrepository",{"_index":323,"title":{"injectables/LessonsRepository.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"coverage.html":{},"overview.html":{}}}],["lessonsschema",{"_index":328,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":652,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":628,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":469,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["local",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["localhost:27017",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"miscellaneous/variables.html":{}}}],["login(@body",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{}}}],["longdescription",{"_index":242,"title":{},"body":{"classes/Course.html":{},"miscellaneous/variables.html":{}}}],["manager",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["many",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":166,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["matching",{"_index":20,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":267,"title":{},"body":{"classes/Course.html":{}}}],["metadata",{"_index":478,"title":{},"body":{"classes/ToIntegerPipe.html":{},"dependencies.html":{}}}],["methods",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationFilter.html":{}}}],["middleware",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middleware/get",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":584,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":627,"title":{},"body":{"index.html":{}}}],["mocking",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":617,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/CoursesRepository.html":{},"injectables/LessonsRepository.html":{}}}],["models/course",{"_index":295,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["models/lesson",{"_index":439,"title":{},"body":{"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{}}}],["models/user",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{}}}],["modern",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mongo_connection",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoclient",{"_index":538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoclient(mongodb_connection_url",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":566,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongodb+srv://nestjs:zeejdswowhwoenqo@cluster0",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb+srv://username:password@clustername",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb://localhost:27017/nestjs",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb_connection_url",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/CoursesRepository.html":{},"injectables/LessonsRepository.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema.types.objectid",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{}}}],["mongoosemodule.forfeature",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoursesModule.html":{}}}],["mongoosemodule.forroot(mongo_connection",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":641,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":647,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":605,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":651,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":14,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"injectables/LessonsRepository.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":389,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["nestmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":160,"title":{},"body":{"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"controllers/LessonsController.html":{},"classes/ToIntegerPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":385,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["ngrx",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.js",{"_index":597,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["npm",{"_index":610,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":468,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["number",{"_index":258,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numeric",{"_index":261,"title":{},"body":{"classes/Course.html":{}}}],["nutshell",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":199,"title":{},"body":{"guards/AuthenticationGurad.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":379,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["official",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offline",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":629,"title":{},"body":{"index.html":{}}}],["operators",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":454,"title":{},"body":{"controllers/LessonsController.html":{}}}],["origins",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"overview.html":{}}}],["output",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":656,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":349,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["package",{"_index":545,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagenumber",{"_index":428,"title":{},"body":{"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{}}}],["pagesize",{"_index":429,"title":{},"body":{"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{}}}],["param",{"_index":293,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/LessonsController.html":{}}}],["param('courseid",{"_index":301,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/LessonsController.html":{}}}],["param('courseurl",{"_index":310,"title":{},"body":{"controllers/CoursesController.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"miscellaneous/functions.html":{}}}],["parseint(value",{"_index":482,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["parseintpipe",{"_index":437,"title":{},"body":{"controllers/LessonsController.html":{}}}],["part",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pass",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patterns",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phase",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phases",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipetransform",{"_index":475,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["please",{"_index":639,"title":{},"body":{"index.html":{}}}],["post",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CoursesController.html":{},"miscellaneous/variables.html":{}}}],["post('login",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["practical",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["practice",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CoursesController.html":{},"controllers/LessonsController.html":{}}}],["private",{"_index":152,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/CoursesRepository.html":{},"injectables/LessonsRepository.html":{}}}],["problem",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":619,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":596,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":630,"title":{},"body":{"index.html":{}}}],["promise",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{}}}],["promo",{"_index":243,"title":{},"body":{"classes/Course.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":236,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{}}}],["public",{"_index":494,"title":{},"body":{"classes/ValidationException.html":{}}}],["put",{"_index":294,"title":{},"body":{"controllers/CoursesController.html":{}}}],["put(':courseid",{"_index":289,"title":{},"body":{"controllers/CoursesController.html":{}}}],["pwa",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":438,"title":{},"body":{"controllers/LessonsController.html":{}}}],["query('pagenumber",{"_index":448,"title":{},"body":{"controllers/LessonsController.html":{}}}],["query('pagesize",{"_index":449,"title":{},"body":{"controllers/LessonsController.html":{}}}],["query('sortorder",{"_index":447,"title":{},"body":{"controllers/LessonsController.html":{}}}],["querying",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactive",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":640,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["reducer",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reducers",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["references",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{}}}],["register(@body",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(user",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{}}}],["registration",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reloading",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositories",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositories/auth.repository",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["repositories/courses.repository",{"_index":297,"title":{},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["repositories/lessons.repository",{"_index":331,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/LessonsController.html":{}}}],["repository",{"_index":608,"title":{},"body":{"index.html":{}}}],["req",{"_index":387,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["req.headers.authorization",{"_index":391,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["req['user",{"_index":397,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["request",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/HttpExceptionFilter.html":{}}}],["request['user",{"_index":204,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{}}}],["requests",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('mongodb').mongoclient",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('mongodb').objectid",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":384,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"overview.html":{}}}],["response",{"_index":368,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["response.status(400).json",{"_index":506,"title":{},"body":{"classes/ValidationFilter.html":{}}}],["response.status(500).json",{"_index":370,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["response.status(statuscode).json",{"_index":410,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["rest",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":19,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationFilter.html":{}}}],["returns",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/ValidationFilter.html":{}}}],["right",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rimraf",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":231,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/enumerations.html":{}}}],["roles",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthorizationGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rules",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":614,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":200,"title":{},"body":{"guards/AuthenticationGurad.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["salt",{"_index":184,"title":{},"body":{"injectables/AuthRepository.html":{},"dependencies.html":{}}}],["saltorrounds",{"_index":182,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["sample",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":601,"title":{},"body":{"index.html":{}}}],["scale",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoursesModule.html":{}}}],["schemas/courses.schema",{"_index":327,"title":{},"body":{"modules/CoursesModule.html":{}}}],["schemas/lessons.schema",{"_index":329,"title":{},"body":{"modules/CoursesModule.html":{}}}],["schemas/users.schema",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["scratch",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":458,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["search(courseid",{"_index":463,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["searching",{"_index":466,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["searchlesson",{"_index":423,"title":{},"body":{"controllers/LessonsController.html":{}}}],["searchlesson(courseid",{"_index":426,"title":{},"body":{"controllers/LessonsController.html":{}}}],["secret",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretkey",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["section",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seqno",{"_index":244,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"injectables/LessonsRepository.html":{},"miscellaneous/variables.html":{}}}],["seqnum",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sequence",{"_index":260,"title":{},"body":{"classes/Course.html":{}}}],["serveless",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":602,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["serverless",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serving",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settting",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":603,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["sign",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simulating",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":470,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["small",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small.png",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solution",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solve",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort",{"_index":471,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["sortorder",{"_index":427,"title":{},"body":{"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"index.html":{}}}],["specs",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spies",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":633,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../courses.schema.ts",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db",{"_index":590,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../lessons.schema.ts",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../populate",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enums.ts",{"_index":586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.schema.ts",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:8",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:24",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/controllers/auth.controller.ts",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controllers/auth.controller.ts:19",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:23",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/models/user.ts",{"_index":486,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/auth/models/user.ts:12",{"_index":487,"title":{},"body":{"classes/User.html":{}}}],["src/auth/models/user.ts:13",{"_index":491,"title":{},"body":{"classes/User.html":{}}}],["src/auth/models/user.ts:14",{"_index":488,"title":{},"body":{"classes/User.html":{}}}],["src/auth/models/user.ts:15",{"_index":490,"title":{},"body":{"classes/User.html":{}}}],["src/auth/repositories/auth.repository.ts",{"_index":140,"title":{},"body":{"injectables/AuthRepository.html":{},"coverage.html":{}}}],["src/auth/repositories/auth.repository.ts:10",{"_index":142,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["src/auth/repositories/auth.repository.ts:15",{"_index":144,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["src/auth/repositories/auth.repository.ts:41",{"_index":145,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["src/auth/schemas/users.schema.ts",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants.ts",{"_index":520,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/constants.ts",{"_index":521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/controllers/courses.controller.ts",{"_index":269,"title":{},"body":{"controllers/CoursesController.html":{},"coverage.html":{}}}],["src/courses/controllers/courses.controller.ts:19",{"_index":282,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/controllers/courses.controller.ts:23",{"_index":290,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/controllers/courses.controller.ts:37",{"_index":285,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/controllers/courses.controller.ts:50",{"_index":280,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/controllers/courses.controller.ts:54",{"_index":277,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/controllers/lessons.controller.ts",{"_index":420,"title":{},"body":{"controllers/LessonsController.html":{},"coverage.html":{}}}],["src/courses/controllers/lessons.controller.ts:21",{"_index":425,"title":{},"body":{"controllers/LessonsController.html":{}}}],["src/courses/controllers/lessons.controller.ts:25",{"_index":431,"title":{},"body":{"controllers/LessonsController.html":{}}}],["src/courses/courses.module.ts",{"_index":324,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/models/course.ts",{"_index":235,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.ts:10",{"_index":250,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:11",{"_index":251,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:12",{"_index":255,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:13",{"_index":249,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:14",{"_index":254,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:15",{"_index":257,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:6",{"_index":247,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:7",{"_index":262,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:8",{"_index":264,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.ts:9",{"_index":252,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/lesson.ts",{"_index":413,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["src/courses/models/lesson.ts:2",{"_index":415,"title":{},"body":{"classes/Lesson.html":{}}}],["src/courses/models/lesson.ts:3",{"_index":417,"title":{},"body":{"classes/Lesson.html":{}}}],["src/courses/models/lesson.ts:4",{"_index":418,"title":{},"body":{"classes/Lesson.html":{}}}],["src/courses/models/lesson.ts:5",{"_index":419,"title":{},"body":{"classes/Lesson.html":{}}}],["src/courses/models/lesson.ts:6",{"_index":416,"title":{},"body":{"classes/Lesson.html":{}}}],["src/courses/repositories/courses.repository.ts",{"_index":333,"title":{},"body":{"injectables/CoursesRepository.html":{},"coverage.html":{}}}],["src/courses/repositories/courses.repository.ts:13",{"_index":345,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["src/courses/repositories/courses.repository.ts:20",{"_index":343,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["src/courses/repositories/courses.repository.ts:28",{"_index":340,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["src/courses/repositories/courses.repository.ts:32",{"_index":339,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["src/courses/repositories/courses.repository.ts:36",{"_index":344,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["src/courses/repositories/courses.repository.ts:7",{"_index":337,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["src/courses/repositories/courses.repository.ts:9",{"_index":341,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["src/courses/repositories/lessons.repository.ts",{"_index":456,"title":{},"body":{"injectables/LessonsRepository.html":{},"coverage.html":{}}}],["src/courses/repositories/lessons.repository.ts:31",{"_index":462,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["src/courses/repositories/lessons.repository.ts:7",{"_index":460,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["src/courses/repositories/lessons.repository.ts:9",{"_index":464,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["src/courses/schemas/courses.schema.ts",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/schemas/lessons.schema.ts",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/db",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/enums/roles.enums.ts",{"_index":587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/filters/fallback.filter.ts",{"_index":355,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"coverage.html":{}}}],["src/filters/fallback.filter.ts:4",{"_index":360,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["src/filters/http.filter.ts",{"_index":401,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/filters/http.filter.ts:9",{"_index":402,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/filters/validation.exception.ts",{"_index":493,"title":{},"body":{"classes/ValidationException.html":{},"coverage.html":{}}}],["src/filters/validation.exception.ts:3",{"_index":497,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/filters/validation.exception.ts:4",{"_index":498,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/filters/validation.filter.ts",{"_index":502,"title":{},"body":{"classes/ValidationFilter.html":{},"coverage.html":{}}}],["src/filters/validation.filter.ts:6",{"_index":503,"title":{},"body":{"classes/ValidationFilter.html":{}}}],["src/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:5",{"_index":11,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/guards/authentication.gurad.ts",{"_index":192,"title":{},"body":{"guards/AuthenticationGurad.html":{},"coverage.html":{}}}],["src/guards/authentication.gurad.ts:11",{"_index":196,"title":{},"body":{"guards/AuthenticationGurad.html":{}}}],["src/guards/authorization.guard.ts",{"_index":211,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["src/guards/authorization.guard.ts:11",{"_index":216,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/guards/authorization.guard.ts:25",{"_index":218,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/guards/authorization.guard.ts:9",{"_index":214,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/main.ts",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/get",{"_index":380,"title":{},"body":{"injectables/GetUserMiddleware.html":{},"coverage.html":{}}}],["src/pipes/to",{"_index":473,"title":{},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["src/populate",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":615,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":618,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":620,"title":{},"body":{"index.html":{}}}],["started",{"_index":595,"title":{"index.html":{}},"body":{}}],["starter",{"_index":607,"title":{},"body":{"index.html":{}}}],["state",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":411,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":371,"title":{},"body":{"classes/FallBackExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationFilter.html":{}}}],["stay",{"_index":643,"title":{},"body":{"index.html":{}}}],["step",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":86,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styling",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":500,"title":{},"body":{"classes/ValidationException.html":{}}}],["super(['admin",{"_index":18,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["support",{"_index":634,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":654,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminusmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":623,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":626,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":625,"title":{},"body":{"index.html":{}}}],["test@angular",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testbed",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":622,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":632,"title":{},"body":{"index.html":{}}}],["this.allowedroles",{"_index":227,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.allowedroles.includes(role",{"_index":232,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.appservice.gethello",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["this.coursemodel.create(course",{"_index":352,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["this.coursemodel.find",{"_index":347,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["this.coursemodel.findbyid(courseid",{"_index":350,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["this.coursemodel.findbyidanddelete(courseid",{"_index":351,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["this.coursemodel.findone",{"_index":353,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["this.coursemodel.findoneandupdate",{"_index":348,"title":{},"body":{"injectables/CoursesRepository.html":{}}}],["this.coursesdb.addcourse(course",{"_index":320,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesdb.deletecourse(courseid",{"_index":317,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesdb.findall",{"_index":300,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesdb.findcoursebyid(courseid",{"_index":309,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesdb.findcoursebyurl(courseurl",{"_index":313,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesdb.updatecourse(courseid",{"_index":306,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.isallowed(user.roles",{"_index":222,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.lessondb.getall",{"_index":446,"title":{},"body":{"controllers/LessonsController.html":{}}}],["this.lessondb.search(courseid",{"_index":455,"title":{},"body":{"controllers/LessonsController.html":{}}}],["this.lessonmodel.find",{"_index":467,"title":{},"body":{"injectables/LessonsRepository.html":{}}}],["this.userdb.login(user",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userdb.register(user",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usermodel.create(user",{"_index":188,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["this.usermodel.findone",{"_index":154,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["through",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throw",{"_index":159,"title":{},"body":{"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"controllers/LessonsController.html":{},"classes/ToIntegerPipe.html":{}}}],["today",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tointegerpipe",{"_index":472,"title":{"classes/ToIntegerPipe.html":{}},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["token",{"_index":177,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/GetUserMiddleware.html":{}}}],["tools",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":644,"title":{},"body":{"index.html":{}}}],["tour",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":476,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["transform(value",{"_index":477,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["transformer",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["triggered",{"_index":364,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["triggred",{"_index":407,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["true",{"_index":210,"title":{},"body":{"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"injectables/CoursesRepository.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":393,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["tutorial",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":650,"title":{},"body":{"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"classes/FallBackExceptionFilter.html":{},"injectables/GetUserMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/Lesson.html":{},"controllers/LessonsController.html":{},"injectables/LessonsRepository.html":{},"classes/ToIntegerPipe.html":{},"classes/User.html":{},"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":606,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["typically",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{}}}],["unauthorizedexception(\"password",{"_index":167,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["unauthorizedexception(\"user",{"_index":161,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["unauthorizedexception('the",{"_index":178,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["under",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["understand",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["understanding",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unexpected",{"_index":377,"title":{},"body":{"classes/FallBackExceptionFilter.html":{}}}],["unidirectional",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":621,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["university.io",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["university.s3",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["university/course",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unknown",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"controllers/CoursesController.html":{}}}],["up",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":304,"title":{},"body":{"controllers/CoursesController.html":{}}}],["updatecourse",{"_index":275,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["updatecourse(courseid",{"_index":287,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{}}}],["url",{"_index":245,"title":{},"body":{"classes/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesRepository.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":382,"title":{},"body":{"injectables/GetUserMiddleware.html":{},"miscellaneous/variables.html":{}}}],["use(req",{"_index":383,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["used",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LessonsController.html":{}}}],["useguards(adminguard",{"_index":445,"title":{},"body":{"controllers/LessonsController.html":{}}}],["useguards(authenticationgurad",{"_index":443,"title":{},"body":{"controllers/LessonsController.html":{}}}],["user",{"_index":96,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"guards/AuthenticationGurad.html":{},"guards/AuthorizationGuard.html":{},"injectables/GetUserMiddleware.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.middleware",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["user.middleware.ts",{"_index":381,"title":{},"body":{"injectables/GetUserMiddleware.html":{},"coverage.html":{}}}],["user.middleware.ts:7",{"_index":386,"title":{},"body":{"injectables/GetUserMiddleware.html":{}}}],["user.password",{"_index":186,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["user.username",{"_index":155,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["userdb",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["userfromdb",{"_index":153,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["userfromdb._id",{"_index":172,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["userfromdb.password",{"_index":164,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["userfromdb.roles",{"_index":171,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["userfromdb.username",{"_index":170,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["usermodel",{"_index":143,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["username",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["userroles",{"_index":219,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["userroles.foreach((role",{"_index":229,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["users",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersschema",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2.png",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v3.png",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["val",{"_index":481,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["validating",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation.exception",{"_index":504,"title":{},"body":{"classes/ValidationFilter.html":{}}}],["validationerrors",{"_index":495,"title":{},"body":{"classes/ValidationException.html":{},"classes/ValidationFilter.html":{}}}],["validationexception",{"_index":492,"title":{"classes/ValidationException.html":{}},"body":{"classes/ValidationException.html":{},"classes/ValidationFilter.html":{},"coverage.html":{}}}],["validationfilter",{"_index":501,"title":{"classes/ValidationFilter.html":{}},"body":{"classes/ValidationFilter.html":{},"coverage.html":{}}}],["validator",{"_index":266,"title":{},"body":{"classes/Course.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":433,"title":{},"body":{"controllers/LessonsController.html":{},"classes/ToIntegerPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":661,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versioning",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetUserMiddleware.html":{}}}],["vs",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["walk",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":616,"title":{},"body":{"index.html":{}}}],["web",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["website",{"_index":648,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["well",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["west",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["what's",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["widget",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["worker",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["write",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writing",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you'd",{"_index":637,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/admin.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthorizationGuard\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/guards/admin.guard.ts:5\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthorizationGuard } from './authorization.guard';\n\n@Injectable()\nexport class AdminGuard extends AuthorizationGuard {\n  constructor() {\n    super(['admin']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  async getHello(): Promise {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoursesModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CoursesModule } from './courses/courses.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MONGO_CONNECTION } from './constants';\nimport { AuthModule } from './auth/auth.module';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { GetUserMiddleware } from './middleware/get-user.middleware';\nimport { CoursesController } from './courses/controllers/courses.controller';\nimport { LessonsController } from './courses/controllers/lessons.controller';\n\n@Module({\n  imports: [\n    CoursesModule,\n    AuthModule,\n    MongooseModule.forRoot(MONGO_CONNECTION),\n    TerminusModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer\n      .apply(GetUserMiddleware)\n      .forRoutes(CoursesController, LessonsController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/controllers/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/controllers/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UseGuards,\n  Request,\n  Body,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User } from '../models/user';\nimport { AuthRepository } from '../repositories/auth.repository';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private userDb: AuthRepository) {}\n  @Post('login')\n  async login(@Body() user: User) {\n    return this.userDb.login(user);\n  }\n  @Post('register')\n  async register(@Body() user: User): Promise {\n    const createdUser = await this.userDb.register(user);\n    return {\n      userName: createdUser.userName,\n      roles: createdUser.roles,\n      password: '',\n      _id: createdUser._id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthRepository\n\nAuthRepository\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthRepository->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './controllers/auth.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersSchema } from './schemas/users.schema';\nimport { AuthRepository } from './repositories/auth.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'User',\n        schema: UsersSchema,\n      },\n    ]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthRepository],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthRepository.html":{"url":"injectables/AuthRepository.html","title":"injectable - AuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/repositories/auth.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/auth/repositories/auth.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/repositories/auth.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/repositories/auth.repository.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from '../models/user';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport { jwtConstants } from '../../constants/constants';\n\n@Injectable()\nexport class AuthRepository {\n  constructor(\n    @InjectModel('User')\n    private userModel: Model,\n  ) {}\n  async login(user: User) {\n    const userFromDb = await this.userModel.findOne({\n      userName: user.userName,\n    });\n    if (!userFromDb) {\n      console.log(\"User doesn't exist\");\n      throw new UnauthorizedException(\"User doesn't exist\");\n    }\n    const isMatch = await bcrypt.compare(user.password, userFromDb.password);\n    if (!isMatch) {\n      console.log(\"Password doesn't match\");\n      throw new UnauthorizedException(\"Password doesn't match\");\n    }\n    const jwtToken = jwt.sign(\n      {\n        userName: userFromDb.userName,\n        roles: userFromDb.roles,\n        _id: userFromDb._id,\n      },\n      jwtConstants.secret,\n      {\n        expiresIn: '2 days',\n      },\n    );\n    return { token: jwtToken };\n  }\n  async register(user: User): Promise {\n    const userFromDb = await this.userModel.findOne({\n      userName: user.userName,\n    });\n    if (userFromDb) {\n      throw new UnauthorizedException('The email already exists');\n    }\n    const saltOrRounds = 10;\n    const salt = await bcrypt.genSalt(saltOrRounds);\n    user.password = await bcrypt.hash(user.password, salt);\n    return this.userModel.create(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGurad.html":{"url":"guards/AuthenticationGurad.html","title":"guard - AuthenticationGurad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGurad\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/authentication.gurad.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/authentication.gurad.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthenticationGurad implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const host = context.switchToHttp(),\n      request = host.getRequest();\n    const user = request['user'];\n    if (!user) {\n      console.log('User is not authenticated,denying access ...');\n      throw new UnauthorizedException('');\n    }\n    console.log('User is authenticated, granting access ...');\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthorizationGuard.html":{"url":"guards/AuthorizationGuard.html","title":"guard - AuthorizationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthorizationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/authorization.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                isAllowed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(allowedRoles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/guards/authorization.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allowedRoles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/authorization.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllowed\n                        \n                    \n                \n            \n            \n                \nisAllowed(userRoles: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/authorization.guard.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRoles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\n\n@Injectable()\nexport class AuthorizationGuard implements CanActivate {\n  constructor(private allowedRoles: string[]) {}\n  canActivate(context: ExecutionContext): boolean {\n    const host = context.switchToHttp(),\n      request = host.getRequest();\n    const user = request['user'];\n    const allowed = this.isAllowed(user.roles);\n    if (!allowed) {\n      console.log(\n        'User is authenticated but not authorized, denying access ....',\n      );\n      throw new ForbiddenException();\n    }\n    console.log('User is authorized, granting access....');\n    return true;\n  }\n  isAllowed(userRoles: string[]) {\n    console.log('Comparing roles', this.allowedRoles, userRoles);\n    let allowed = false;\n    userRoles.forEach((role) => {\n      console.log('Checking if role is allowed', role);\n      if (!allowed && this.allowedRoles.includes(role)) {\n        allowed = true;\n      }\n    });\n    return allowed;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                category\n                            \n                            \n                                courseListIcon\n                            \n                            \n                                description\n                            \n                            \n                                iconUrl\n                            \n                            \n                                lessonsCount\n                            \n                            \n                                longDescription\n                            \n                            \n                                promo\n                            \n                            \n                                seqNo\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        courseListIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seqNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt({message: 'Sequence number must be numeric'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({always: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/models/course.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsInt, IsMongoId, IsString } from 'class-validator';\n\nexport class Course {\n  @IsString()\n  @IsMongoId()\n  _id: string;\n  @IsInt({ message: 'Sequence number must be numeric' }) seqNo: number;\n  @IsString({ always: false }) url: string;\n  @IsString() iconUrl: string;\n  @IsString() courseListIcon: string;\n  @IsString() description: string;\n  @IsString() longDescription: string;\n  @IsString() category: string;\n  @IsInt() lessonsCount: string;\n  @IsBoolean() promo: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoursesController.html":{"url":"controllers/CoursesController.html","title":"controller - CoursesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controllers/courses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCourse\n                            \n                            \n                                    Async\n                                deleteCourse\n                            \n                            \n                                    Async\n                                findAllCourses\n                            \n                            \n                                    Async\n                                findCourseByUrl\n                            \n                            \n                                    Async\n                                updateCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCourse\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCourse(course: Course)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')\n                \n            \n\n            \n                \n                    Defined in src/courses/controllers/courses.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCourse\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCourse(courseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':courseId')\n                \n            \n\n            \n                \n                    Defined in src/courses/controllers/courses.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCourses()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')\n                \n            \n\n            \n                \n                    Defined in src/courses/controllers/courses.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCourseByUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCourseByUrl(courseUrl: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:courseUrl')\n                \n            \n\n            \n                \n                    Defined in src/courses/controllers/courses.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCourse\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCourse(courseId: string, changes: Course)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':courseId')\n                \n            \n\n            \n                \n                    Defined in src/courses/controllers/courses.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { Course } from '../models/course';\nimport { CoursesRepository } from '../repositories/courses.repository';\n\n@Controller('courses')\nexport class CoursesController {\n  constructor(private coursesDb: CoursesRepository) {}\n  @Get('')\n  async findAllCourses(): Promise {\n    return this.coursesDb.findAll();\n  }\n  @Put(':courseId')\n  async updateCourse(\n    @Param('courseId') courseId: string,\n    @Body() changes: Course,\n  ): Promise {\n    if (changes._id) {\n      throw new BadRequestException(\"Can't update course Id\");\n    }\n    return this.coursesDb.updateCourse(courseId, changes);\n  }\n  // @Get('/:courseId')\n  // async findCourse(@Param('courseId') courseId: string): Promise {\n  //   return this.coursesDb.findCourseById(courseId);\n  // }\n  @Get('/:courseUrl')\n  async findCourseByUrl(\n    @Param('courseUrl') courseUrl: string,\n  ): Promise {\n    console.log('Finding cours by url ', courseUrl);\n    const course = await this.coursesDb.findCourseByUrl(courseUrl);\n    if (!course) {\n      throw new NotFoundException(\n        \"Couldn't found a course with url \" + courseUrl,\n      );\n    }\n    return course;\n  }\n  @Delete(':courseId')\n  async deleteCourse(@Param('courseId') courseId: string) {\n    return this.coursesDb.deleteCourse(courseId);\n  }\n  @Post('')\n  async addCourse(@Body() course: Course): Promise {\n    console.log('Creating Course');\n    return this.coursesDb.addCourse(course);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesRepository\n\nCoursesRepository\n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesModule -->\n\nCoursesRepository->CoursesModule\n\n\n\n\n\nLessonsRepository\n\nLessonsRepository\n\nCoursesModule -->\n\nLessonsRepository->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesRepository\n                        \n                        \n                            LessonsRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoursesController\n                        \n                        \n                            LessonsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CoursesController } from './controllers/courses.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { coursesSchema } from './schemas/courses.schema';\nimport { CoursesRepository } from './repositories/courses.repository';\nimport { lessonsSchema } from './schemas/lessons.schema';\nimport { LessonsController } from './controllers/lessons.controller';\nimport { LessonsRepository } from './repositories/lessons.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Course',\n        schema: coursesSchema,\n      },\n      {\n        name: 'Lesson',\n        schema: lessonsSchema,\n      },\n    ]),\n  ],\n  controllers: [CoursesController, LessonsController],\n  providers: [CoursesRepository, LessonsRepository],\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoursesRepository.html":{"url":"injectables/CoursesRepository.html","title":"injectable - CoursesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoursesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/repositories/courses.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                deleteCourse\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findCourseById\n                            \n                            \n                                    Async\n                                findCourseByUrl\n                            \n                            \n                                    Async\n                                updateCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/courses/repositories/courses.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCourse\n                        \n                    \n                \n            \n            \n                \naddCourse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/repositories/courses.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCourse\n                        \n                    \n                \n            \n            \n                \ndeleteCourse(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/repositories/courses.repository.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/courses/repositories/courses.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findCourseById\n                        \n                    \n                \n            \n            \n                \nfindCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/repositories/courses.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCourseByUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCourseByUrl(courseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/repositories/courses.repository.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCourse\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCourse(courseId: string, changes: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/repositories/courses.repository.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Course } from '../models/course';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class CoursesRepository {\n  constructor(@InjectModel('Course') private courseModel: Model) {}\n  async findAll(): Promise {\n    return this.courseModel.find();\n  }\n\n  async updateCourse(courseId: string, changes: Course): Promise {\n    return this.courseModel.findOneAndUpdate({ _id: courseId }, changes, {\n      new: true,\n      overwrite: true,\n    });\n  }\n\n  findCourseById(courseId: string) {\n    const course = this.courseModel.findById(courseId);\n    if (!course) {\n      throw new NotFoundException();\n    }\n    return course;\n  }\n\n  deleteCourse(courseId: string) {\n    return this.courseModel.findByIdAndDelete(courseId);\n  }\n\n  addCourse(course: Course): Promise {\n    return this.courseModel.create(course);\n  }\n\n  async findCourseByUrl(courseUrl: string): Promise {\n    return this.courseModel.findOne({ url: courseUrl });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FallBackExceptionFilter.html":{"url":"classes/FallBackExceptionFilter.html","title":"class - FallBackExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FallBackExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/fallback.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/fallback.filter.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\n@Catch()\nexport class FallBackExceptionFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    console.log(\n      'fallback exception filter has been triggered',\n      JSON.stringify(exception),\n    );\n    const ctx = host.switchToHttp(),\n      response = ctx.getResponse();\n    return response.status(500).json({\n      statusCode: 500,\n      createdBy: 'FallBackException',\n      errorMessage: exception.message\n        ? exception.message\n        : 'Unexpected error occurred',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetUserMiddleware.html":{"url":"injectables/GetUserMiddleware.html","title":"injectable - GetUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/get-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/get-user.middleware.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as jwt from 'jsonwebtoken';\nimport { jwtConstants } from '../constants/constants';\n\n@Injectable()\nexport class GetUserMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void): void {\n    const authJwtToken = req.headers.authorization;\n    console.log('Here is the token', authJwtToken);\n    if (!authJwtToken) {\n      next();\n      return;\n    }\n    try {\n      const user = jwt.verify(authJwtToken, jwtConstants.secret);\n      if (user) {\n        console.log('Found user details in jwt', user);\n        req['user'] = user;\n      }\n    } catch (e) {\n      console.log('Error', e);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/http.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/http.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    console.log('Http exception handler triggred', JSON.stringify(exception));\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse(),\n      request = ctx.getRequest(),\n      statusCode = exception.getStatus();\n    return response.status(statusCode).json({\n      status: statusCode,\n      createdBy: 'HttpExceptionFilter',\n      errorMessage: exception.response.message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/lesson.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                courseId\n                            \n                            \n                                description\n                            \n                            \n                                duration\n                            \n                            \n                                seqNo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/models/lesson.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/models/lesson.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/models/lesson.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/models/lesson.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seqNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/models/lesson.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Lesson {\n  _id: number;\n  description: string;\n  duration: number;\n  seqNo: number;\n  courseId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LessonsController.html":{"url":"controllers/LessonsController.html","title":"controller - LessonsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LessonsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controllers/lessons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllLessons\n                            \n                            \n                                searchLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllLessons\n                        \n                    \n                \n            \n            \n                \ngetAllLessons()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@UseGuards(AdminGuard)\n                \n            \n\n            \n                \n                    Defined in src/courses/controllers/lessons.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchLesson\n                        \n                    \n                \n            \n            \n                \nsearchLesson(courseId: string, sortOrder: string, pageNumber: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':courseId')\n                \n            \n\n            \n                \n                    Defined in src/courses/controllers/lessons.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortOrder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'acs'\n                                    \n\n                                \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        5\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Controller,\n  Get,\n  Param,\n  ParseIntPipe,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { Lesson } from '../models/lesson';\nimport { LessonsRepository } from '../repositories/lessons.repository';\nimport { AuthenticationGurad } from '../../guards/authentication.gurad';\nimport { AdminGuard } from '../../guards/admin.guard';\n\n@Controller('lessons')\n@UseGuards(AuthenticationGurad)\nexport class LessonsController {\n  constructor(private lessonDb: LessonsRepository) {}\n  @Get('')\n  @UseGuards(AdminGuard)\n  getAllLessons(): Promise {\n    return this.lessonDb.getAll();\n  }\n  @Get(':courseId')\n  searchLesson(\n    @Param('courseId') courseId: string,\n    @Query('sortOrder') sortOrder = 'acs',\n    @Query('pageNumber', ParseIntPipe) pageNumber = 0,\n    @Query('pageSize', ParseIntPipe) pageSize = 5,\n  ): Promise {\n    if (!courseId) {\n      throw new BadRequestException('CourseId must be defined');\n    }\n    if (sortOrder != 'asc' && sortOrder != 'dsc') {\n      throw new BadRequestException('Sort order should be either asc or dsc');\n    }\n    return this.lessonDb.search(courseId, sortOrder, pageNumber, pageSize);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonsRepository.html":{"url":"injectables/LessonsRepository.html","title":"injectable - LessonsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/repositories/lessons.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/courses/repositories/lessons.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/courses/repositories/lessons.repository.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                    \n                    search(courseId: string, sortOrder: string, pageNumber: number, pageSize: number)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/repositories/lessons.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sortOrder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Lesson } from '../models/lesson';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LessonsRepository {\n  constructor(@InjectModel('Lesson') private lessonModel: Model) {}\n  async search(\n    courseId: string,\n    sortOrder: string,\n    pageNumber: number,\n    pageSize: number,\n  ): Promise {\n    console.log(\n      'Searching for lessons',\n      courseId,\n      sortOrder,\n      pageNumber,\n      pageSize,\n    );\n    return this.lessonModel.find({ course: courseId }, null, {\n      limit: pageSize,\n      skip: pageSize * pageNumber,\n      sort: {\n        seqNo: sortOrder,\n      },\n    });\n  }\n\n  async getAll(): Promise {\n    return this.lessonModel.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToIntegerPipe.html":{"url":"classes/ToIntegerPipe.html","title":"class - ToIntegerPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToIntegerPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/to-integer.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/to-integer.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  PipeTransform,\n} from '@nestjs/common';\n\nexport class ToIntegerPipe implements PipeTransform {\n  transform(value: string, metadata: ArgumentMetadata): number {\n    const val = parseInt(value);\n    if (isNaN(val)) {\n      throw new BadRequestException('Conversion to number failed ' + value);\n    }\n    return val;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/models/user.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/models/user.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/models/user.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/models/user.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsInt,\n  IsMongoId,\n  IsString,\n} from 'class-validator';\n\nexport class User {\n  @IsString()\n  @IsMongoId()\n  _id: string;\n  @IsString() userName: string;\n  @IsString() password: string;\n  @IsArray() roles: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/validation.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: string[])\n                    \n                \n                        \n                            \n                                Defined in src/filters/validation.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/filters/validation.exception.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\n\nexport class ValidationException extends BadRequestException {\n  constructor(public validationErrors: string[]) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationFilter.html":{"url":"classes/ValidationFilter.html","title":"class - ValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/validation.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                ValidationException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { ValidationException } from './validation.exception';\n\n@Catch(ValidationException)\nexport class ValidationFilter implements ExceptionFilter {\n  catch(exception: ValidationException, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp(),\n      response = ctx.getResponse();\n    return response.status(400).json({\n      statusCode: 400,\n      createdBy: 'ValidationFilter',\n      validationErrors: exception.validationErrors,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/repositories/auth.repository.ts\n            \n            injectable\n            AuthRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/schemas/users.schema.ts\n            \n            variable\n            UsersSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            MONGO_CONNECTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/controllers/courses.controller.ts\n            \n            controller\n            CoursesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/courses/controllers/lessons.controller.ts\n            \n            controller\n            LessonsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/models/course.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/courses/models/lesson.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/courses/repositories/courses.repository.ts\n            \n            injectable\n            CoursesRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/repositories/lessons.repository.ts\n            \n            injectable\n            LessonsRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/courses/schemas/courses.schema.ts\n            \n            variable\n            coursesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/schemas/lessons.schema.ts\n            \n            variable\n            lessonsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db-data.ts\n            \n            function\n            authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db-data.ts\n            \n            function\n            findAllCourses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db-data.ts\n            \n            function\n            findCourseById\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db-data.ts\n            \n            function\n            findLessonsForCourse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db-data.ts\n            \n            variable\n            COURSES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db-data.ts\n            \n            variable\n            LESSONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db-data.ts\n            \n            variable\n            USERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/fallback.filter.ts\n            \n            class\n            FallBackExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/http.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/validation.exception.ts\n            \n            class\n            ValidationException\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/filters/validation.filter.ts\n            \n            class\n            ValidationFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            injectable\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/authentication.gurad.ts\n            \n            guard\n            AuthenticationGurad\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/authorization.guard.ts\n            \n            guard\n            AuthorizationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/get-user.middleware.ts\n            \n            injectable\n            GetUserMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pipes/to-integer.pipe.ts\n            \n            class\n            ToIntegerPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/populate-db.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/populate-db.ts\n            \n            variable\n            dbName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/populate-db.ts\n            \n            variable\n            MongoClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/populate-db.ts\n            \n            variable\n            MONGODB_CONNECTION_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/populate-db.ts\n            \n            variable\n            ObjectId\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.3.1\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/terminus : ^8.0.4\n        \n            bcrypt : ^5.0.1\n        \n            cache-manager : ^3.6.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            mongodb : ^4.3.1\n        \n            mongoose : ^6.1.8\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            password-hash-and-salt : ^0.1.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../roles.enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/enums/roles.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authenticate   (src/.../db-data.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            findAllCourses   (src/.../db-data.ts)\n                        \n                        \n                            findCourseById   (src/.../db-data.ts)\n                        \n                        \n                            findLessonsForCourse   (src/.../db-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/db-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(email: string, password: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllCourses\n                        \n                    \n                \n            \n            \n                \nfindAllCourses()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findCourseById\n                        \n                    \n                \n            \n            \n                \nfindCourseById(courseId: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findLessonsForCourse\n                        \n                    \n                \n            \n            \n                \nfindLessonsForCourse(courseId: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthRepository\n\nAuthRepository\n\nAuthModule -->\n\nAuthRepository->AuthModule\n\n\n\n\n\nCoursesRepository\n\nCoursesRepository\n\nCoursesModule -->\n\nCoursesRepository->CoursesModule\n\n\n\n\n\nLessonsRepository\n\nLessonsRepository\n\nCoursesModule -->\n\nLessonsRepository->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            client   (src/.../populate-db.ts)\n                        \n                        \n                            COURSES   (src/.../db-data.ts)\n                        \n                        \n                            coursesSchema   (src/.../courses.schema.ts)\n                        \n                        \n                            dbName   (src/.../populate-db.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            LESSONS   (src/.../db-data.ts)\n                        \n                        \n                            lessonsSchema   (src/.../lessons.schema.ts)\n                        \n                        \n                            MONGO_CONNECTION   (src/.../constants.ts)\n                        \n                        \n                            MongoClient   (src/.../populate-db.ts)\n                        \n                        \n                            MONGODB_CONNECTION_URL   (src/.../populate-db.ts)\n                        \n                        \n                            ObjectId   (src/.../populate-db.ts)\n                        \n                        \n                            USERS   (src/.../db-data.ts)\n                        \n                        \n                            UsersSchema   (src/.../users.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/populate-db.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MongoClient(MONGODB_CONNECTION_URL)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'nestjs-course'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MongoClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('mongodb').MongoClient\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MONGODB_CONNECTION_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'localhost:27017'\n                    \n                \n\n            \n                \n                    \nIMPORTANT!!!\nMongoDB Connection URL - create your own url with the right cluster name, username, password and database name\nFormat: mongodb+srv://username:password@clustername\nExample (don't use this as you don't have write access):\nmongodb+srv://nestjs:ZeEjdswOWHwoenQO@cluster0-dbucq.gcp.mongodb.net\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('mongodb').ObjectID\n                    \n                \n\n\n        \n    \n\n    src/db-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COURSES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  14: {\n    id: 14,\n    description: 'NestJs In Practice Course',\n    longDescription:\n      'Build a modern REST backend using Typescript, MongoDB and the familiar Angular API.',\n    iconUrl:\n      'https://angular-university.s3-us-west-1.amazonaws.com/course-images/nestjs-v2.png',\n    category: 'BEGINNER',\n    lessonsCount: 10,\n    seqNo: 0,\n    url: 'nestjs-course',\n    promo: false,\n  },\n  4: {\n    id: 4,\n    description: 'NgRx (with NgRx Data) - The Complete Guide',\n    longDescription:\n      'Learn the modern Ngrx Ecosystem, including NgRx Data, Store, Effects, Router Store, Ngrx Entity, and Dev Tools.',\n    iconUrl:\n      'https://angular-university.s3-us-west-1.amazonaws.com/course-images/ngrx-v2.png',\n    category: 'BEGINNER',\n    lessonsCount: 10,\n    seqNo: 1,\n    url: 'ngrx-course',\n    promo: false,\n  },\n\n  2: {\n    id: 2,\n    description: 'Angular Core Deep Dive',\n    longDescription:\n      'A detailed walk-through of the most important part of Angular - the Core and Common modules',\n    iconUrl:\n      'https://s3-us-west-1.amazonaws.com/angular-university/course-images/angular-core-in-depth-small.png',\n    lessonsCount: 10,\n    category: 'BEGINNER',\n    seqNo: 2,\n    url: 'angular-core-course',\n    promo: false,\n  },\n\n  3: {\n    id: 3,\n    description: 'RxJs In Practice Course',\n    longDescription:\n      'Understand the RxJs Observable pattern, learn the RxJs Operators via practical examples',\n    iconUrl:\n      'https://s3-us-west-1.amazonaws.com/angular-university/course-images/rxjs-in-practice-course.png',\n    category: 'BEGINNER',\n    lessonsCount: 10,\n    seqNo: 3,\n    url: 'rxjs-course',\n    promo: false,\n  },\n\n  1: {\n    id: 1,\n    description: 'Serverless Angular with Firebase Course',\n    longDescription:\n      'Serveless Angular with Firestore, Firebase Storage & Hosting, Firebase Cloud Functions & AngularFire',\n    iconUrl:\n      'https://s3-us-west-1.amazonaws.com/angular-university/course-images/serverless-angular-small.png',\n    lessonsCount: 10,\n    category: 'BEGINNER',\n    seqNo: 4,\n    url: 'serverless-angular',\n    promo: false,\n  },\n\n  /*\n  5: {\n    id: 5,\n    description: 'Angular for Beginners',\n    longDescription: \"Establish a solid layer of fundamentals, learn what's under the hood of Angular\",\n    iconUrl: 'https://angular-academy.s3.amazonaws.com/thumbnails/angular2-for-beginners-small-v2.png',\n    category: 'BEGINNER',\n    lessonsCount: 10,\n    seqNo: 5,\n    url: 'angular-for-beginners'\n  },\n*/\n\n  12: {\n    id: 12,\n    description: 'Angular Testing Course',\n    longDescription:\n      'In-depth guide to Unit Testing and E2E Testing of Angular Applications',\n    iconUrl:\n      'https://s3-us-west-1.amazonaws.com/angular-university/course-images/angular-testing-small.png',\n    category: 'BEGINNER',\n    seqNo: 6,\n    url: 'angular-testing-course',\n    lessonsCount: 10,\n    promo: false,\n  },\n\n  6: {\n    id: 6,\n    description: 'Angular Security Course - Web Security Fundamentals',\n    longDescription:\n      'Learn Web Security Fundamentals and apply them to defend an Angular / Node Application from multiple types of attacks.',\n    iconUrl:\n      'https://s3-us-west-1.amazonaws.com/angular-university/course-images/security-cover-small-v2.png',\n    category: 'ADVANCED',\n    lessonsCount: 11,\n    seqNo: 7,\n    url: 'angular-security-course',\n    promo: false,\n  },\n\n  7: {\n    id: 7,\n    description: 'Angular PWA - Progressive Web Apps Course',\n    longDescription:\n      'Learn Angular Progressive Web Applications, build the future of the Web Today.',\n    iconUrl:\n      'https://s3-us-west-1.amazonaws.com/angular-university/course-images/angular-pwa-course.png',\n    category: 'ADVANCED',\n    lessonsCount: 8,\n    seqNo: 8,\n    url: 'angular-pwa-course',\n    promo: false,\n  },\n\n  8: {\n    id: 8,\n    description: 'Angular Advanced Library Laboratory: Build Your Own Library',\n    longDescription:\n      'Learn Advanced Angular functionality typically used in Library Development. Advanced Components, Directives, Testing, Npm',\n    iconUrl:\n      'https://angular-academy.s3.amazonaws.com/thumbnails/advanced_angular-small-v3.png',\n    category: 'ADVANCED',\n    seqNo: 9,\n    url: 'angular-advanced-course',\n    promo: false,\n  },\n\n  9: {\n    id: 9,\n    description: 'The Complete Typescript Course',\n    longDescription:\n      'Complete Guide to Typescript From Scratch: Learn the language in-depth and use it to build a Node REST API.',\n    iconUrl:\n      'https://angular-academy.s3.amazonaws.com/thumbnails/typescript-2-small.png',\n    category: 'BEGINNER',\n    seqNo: 10,\n    url: 'typescript-course',\n    promo: false,\n  },\n\n  10: {\n    id: 10,\n    description: 'Rxjs and Reactive Patterns Angular Architecture Course',\n    longDescription:\n      'Learn the core RxJs Observable Pattern as well and many other Design Patterns for building Reactive Angular Applications.',\n    iconUrl:\n      'https://s3-us-west-1.amazonaws.com/angular-academy/blog/images/rxjs-reactive-patterns-small.png',\n    category: 'BEGINNER',\n    seqNo: 11,\n    url: 'rxjs-patterns-course',\n    promo: false,\n  },\n\n  11: {\n    id: 11,\n    description: 'Angular Material Course',\n    longDescription:\n      'Build Applications with the official Angular Widget Library',\n    iconUrl:\n      'https://s3-us-west-1.amazonaws.com/angular-university/course-images/material_design.png',\n    category: 'BEGINNER',\n    seqNo: 12,\n    url: 'angular-material-course',\n    promo: false,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LESSONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  1: {\n    id: 1,\n    description:\n      'Angular Tutorial For Beginners - Build Your First App - Hello World Step By Step',\n    duration: '4:17',\n    seqNo: 1,\n    courseId: 5,\n  },\n  2: {\n    id: 2,\n    description: 'Building Your First  Component - Component Composition',\n    duration: '2:07',\n    seqNo: 2,\n    courseId: 5,\n  },\n  3: {\n    id: 3,\n    description: 'Component @Input - How To Pass Input Data To an  Component',\n    duration: '2:33',\n    seqNo: 3,\n    courseId: 5,\n  },\n  4: {\n    id: 4,\n    description: ' Component Events - Using @Output to create custom events',\n    duration: '4:44',\n    seqNo: 4,\n    courseId: 5,\n  },\n  5: {\n    id: 5,\n    description: ' Component Templates - Inline Vs External',\n    duration: '2:55',\n    seqNo: 5,\n    courseId: 5,\n  },\n  6: {\n    id: 6,\n    description: 'Styling  Components - Learn About Component Style Isolation',\n    duration: '3:27',\n    seqNo: 6,\n    courseId: 5,\n  },\n  7: {\n    id: 7,\n    description: ' Component Interaction - Extended Components Example',\n    duration: '9:22',\n    seqNo: 7,\n    courseId: 5,\n  },\n  8: {\n    id: 8,\n    description: ' Components Tutorial For Beginners - Components Exercise !',\n    duration: '1:26',\n    seqNo: 8,\n    courseId: 5,\n  },\n  9: {\n    id: 9,\n    description:\n      ' Components Tutorial For Beginners - Components Exercise Solution Inside',\n    duration: '2:08',\n    seqNo: 9,\n    courseId: 5,\n  },\n  10: {\n    id: 10,\n    description:\n      ' Directives - Inputs, Output Event Emitters and How To Export Template References',\n    duration: '4:01',\n    seqNo: 10,\n    courseId: 5,\n  },\n\n  // Security Course\n  11: {\n    id: 11,\n    description: 'Course Helicopter View',\n    duration: '08:19',\n    seqNo: 1,\n    courseId: 6,\n  },\n\n  12: {\n    id: 12,\n    description: 'Installing Git, Node, NPM and Choosing an IDE',\n    duration: '04:17',\n    seqNo: 2,\n    courseId: 6,\n  },\n\n  13: {\n    id: 13,\n    description:\n      'Installing The Lessons Code - Learn Why Its Essential To Use NPM 5',\n    duration: '06:05',\n    seqNo: 3,\n    courseId: 6,\n  },\n\n  14: {\n    id: 14,\n    description: 'How To Run Node In TypeScript With Hot Reloading',\n    duration: '03:57',\n    seqNo: 4,\n    courseId: 6,\n  },\n\n  15: {\n    id: 15,\n    description: 'Guided Tour Of The Sample Application',\n    duration: '06:00',\n    seqNo: 5,\n    courseId: 6,\n  },\n  16: {\n    id: 16,\n    description: 'Client Side Authentication Service - API Design',\n    duration: '04:53',\n    seqNo: 6,\n    courseId: 6,\n  },\n  17: {\n    id: 17,\n    description: 'Client Authentication Service - Design and Implementation',\n    duration: '09:14',\n    seqNo: 7,\n    courseId: 6,\n  },\n  18: {\n    id: 18,\n    description:\n      'The New Angular HTTP Client - Doing a POST Call To The Server',\n    duration: '06:08',\n    seqNo: 8,\n    courseId: 6,\n  },\n  19: {\n    id: 19,\n    description: 'User Sign Up Server-Side Implementation in Express',\n    duration: '08:50',\n    seqNo: 9,\n    courseId: 6,\n  },\n  20: {\n    id: 20,\n    description: 'Introduction To Cryptographic Hashes - A Running Demo',\n    duration: '05:46',\n    seqNo: 10,\n    courseId: 6,\n  },\n  21: {\n    id: 21,\n    description:\n      'Some Interesting Properties Of Hashing Functions - Validating Passwords',\n    duration: '06:31',\n    seqNo: 11,\n    courseId: 6,\n  },\n\n  // PWA course\n\n  22: {\n    id: 22,\n    description:\n      'Course Kick-Off - Install Node, NPM, IDE And Service Workers Section Code',\n    duration: '07:19',\n    seqNo: 1,\n    courseId: 7,\n  },\n  23: {\n    id: 23,\n    description: 'Service Workers In a Nutshell - Service Worker Registration',\n    duration: '6:59',\n    seqNo: 2,\n    courseId: 7,\n  },\n  24: {\n    id: 24,\n    description:\n      'Service Workers Hello World - Lifecycle Part 1 and PWA Chrome Dev Tools',\n    duration: '7:28',\n    seqNo: 3,\n    courseId: 7,\n  },\n  25: {\n    id: 25,\n    description:\n      'Service Workers and Application Versioning - Install & Activate Lifecycle Phases',\n    duration: '10:17',\n    seqNo: 4,\n    courseId: 7,\n  },\n\n  26: {\n    id: 26,\n    description:\n      'Downloading The Offline Page - The Service Worker Installation Phase',\n    duration: '09:50',\n    seqNo: 5,\n    courseId: 7,\n  },\n  27: {\n    id: 27,\n    description: 'Introduction to the Cache Storage PWA API',\n    duration: '04:44',\n    seqNo: 6,\n    courseId: 7,\n  },\n  28: {\n    id: 28,\n    description: 'View Service Workers HTTP Interception Features In Action',\n    duration: '06:07',\n    seqNo: 7,\n    courseId: 7,\n  },\n  29: {\n    id: 29,\n    description: 'Service Workers Error Handling - Serving The Offline Page',\n    duration: '5:38',\n    seqNo: 8,\n    courseId: 7,\n  },\n\n  // Serverless Angular with Firebase Course\n\n  30: {\n    id: 30,\n    description: 'Development Environment Setup',\n    duration: '5:38',\n    seqNo: 1,\n    courseId: 1,\n  },\n\n  31: {\n    id: 31,\n    description: 'Introduction to the Firebase Ecosystem',\n    duration: '5:12',\n    seqNo: 2,\n    courseId: 1,\n  },\n\n  32: {\n    id: 32,\n    description: 'Importing Data into Firestore',\n    duration: '4:07',\n    seqNo: 3,\n    courseId: 1,\n  },\n\n  33: {\n    id: 33,\n    description: 'Firestore Documents in Detail',\n    duration: '7:32',\n    seqNo: 4,\n    courseId: 1,\n  },\n\n  34: {\n    id: 34,\n    description: 'Firestore Collections in Detail',\n    duration: '6:28',\n    seqNo: 5,\n    courseId: 1,\n  },\n\n  35: {\n    id: 35,\n    description: 'Firestore Unique Identifiers',\n    duration: '4:38',\n    seqNo: 6,\n    courseId: 1,\n  },\n\n  36: {\n    id: 36,\n    description: 'Querying Firestore Collections',\n    duration: '7:54',\n    seqNo: 7,\n    courseId: 1,\n  },\n\n  37: {\n    id: 37,\n    description: 'Firebase Security Rules In Detail',\n    duration: '5:31',\n    seqNo: 8,\n    courseId: 1,\n  },\n\n  38: {\n    id: 38,\n    description: 'Firebase Cloud Functions In Detail',\n    duration: '8:19',\n    seqNo: 9,\n    courseId: 1,\n  },\n\n  39: {\n    id: 39,\n    description: 'Firebase Storage In Detail',\n    duration: '7:05',\n    seqNo: 10,\n    courseId: 1,\n  },\n\n  // Angular Testing Course\n\n  40: {\n    id: 40,\n    description: 'Angular Testing Course - Helicopter View',\n    duration: '5:38',\n    seqNo: 1,\n    courseId: 12,\n  },\n\n  41: {\n    id: 41,\n    description: 'Setting Up the Development Environment',\n    duration: '5:12',\n    seqNo: 2,\n    courseId: 12,\n  },\n\n  42: {\n    id: 42,\n    description: 'Introduction to Jasmine, Spies and specs',\n    duration: '4:07',\n    seqNo: 3,\n    courseId: 12,\n  },\n\n  43: {\n    id: 43,\n    description: 'Introduction to Service Testing',\n    duration: '7:32',\n    seqNo: 4,\n    courseId: 12,\n  },\n\n  44: {\n    id: 44,\n    description: 'Settting up the Angular TestBed',\n    duration: '6:28',\n    seqNo: 5,\n    courseId: 12,\n  },\n\n  45: {\n    id: 45,\n    description: 'Mocking Angular HTTP requests',\n    duration: '4:38',\n    seqNo: 6,\n    courseId: 12,\n  },\n\n  46: {\n    id: 46,\n    description: 'Simulating Failing HTTP Requests',\n    duration: '7:54',\n    seqNo: 7,\n    courseId: 12,\n  },\n\n  47: {\n    id: 47,\n    description: 'Introduction to Angular Component Testing',\n    duration: '5:31',\n    seqNo: 8,\n    courseId: 12,\n  },\n\n  48: {\n    id: 48,\n    description: 'Testing Angular Components without the DOM',\n    duration: '8:19',\n    seqNo: 9,\n    courseId: 12,\n  },\n\n  49: {\n    id: 49,\n    description: 'Testing Angular Components with the DOM',\n    duration: '7:05',\n    seqNo: 10,\n    courseId: 12,\n  },\n\n  // Ngrx Course\n  50: {\n    id: 50,\n    description: 'Welcome to the Angular Ngrx Course',\n    duration: '6:53',\n    seqNo: 1,\n    courseId: 4,\n  },\n  51: {\n    id: 51,\n    description: 'The Angular Ngrx Architecture Course - Helicopter View',\n    duration: '5:52',\n    seqNo: 2,\n    courseId: 4,\n  },\n  52: {\n    id: 52,\n    description:\n      'The Origins of Flux - Understanding the Famous Facebook Bug Problem',\n    duration: '8:17',\n    seqNo: 3,\n    courseId: 4,\n  },\n  53: {\n    id: 53,\n    description: \"Custom Global Events - Why Don't They Scale In Complexity?\",\n    duration: '7:47',\n    seqNo: 4,\n    courseId: 4,\n  },\n  54: {\n    id: 54,\n    description:\n      'The Flux Architecture - How Does it Solve Facebook Counter Problem?',\n    duration: '9:22',\n    seqNo: 5,\n    courseId: 4,\n  },\n  55: {\n    id: 55,\n    description: 'Unidirectional Data Flow And The Angular Development Mode',\n    duration: '7:07',\n    seqNo: 6,\n    courseId: 4,\n  },\n\n  56: {\n    id: 56,\n    description: 'Dispatching an Action - Implementing the Login Component',\n    duration: '4:39',\n    seqNo: 7,\n    courseId: 4,\n  },\n  57: {\n    id: 57,\n    description: 'Setting Up the Ngrx DevTools - Demo',\n    duration: '4:44',\n    seqNo: 8,\n    courseId: 4,\n  },\n  58: {\n    id: 58,\n    description: 'Understanding Reducers - Writing Our First Reducer',\n    duration: '9:10',\n    seqNo: 9,\n    courseId: 4,\n  },\n  59: {\n    id: 59,\n    description: 'How To Define the Store Initial State',\n    duration: '9:10',\n    seqNo: 10,\n    courseId: 4,\n  },\n\n  60: {\n    id: 60,\n    description: 'Introduction to NestJs',\n    duration: '4:29',\n    seqNo: 1,\n    courseId: 14,\n  },\n  61: {\n    id: 61,\n    description: 'Development Environment Setup',\n    duration: '6:37',\n    seqNo: 2,\n    courseId: 14,\n  },\n  62: {\n    id: 62,\n    description: 'Setting up a MongoDB Database',\n    duration: '6:38',\n    seqNo: 3,\n    courseId: 14,\n  },\n  63: {\n    id: 63,\n    description: 'CRUD with NestJs - Controllers and Repositories',\n    duration: '12:12',\n    seqNo: 4,\n    courseId: 14,\n  },\n  64: {\n    id: 64,\n    description: 'First REST endpoint - Get All Courses',\n    duration: '3:42',\n    seqNo: 5,\n    courseId: 14,\n  },\n  65: {\n    id: 65,\n    description: 'Error Handling',\n    duration: '5:15',\n    seqNo: 6,\n    courseId: 14,\n  },\n  66: {\n    id: 66,\n    description: 'NestJs Middleware',\n    duration: '7:08',\n    seqNo: 7,\n    courseId: 14,\n  },\n  67: {\n    id: 67,\n    description: 'Authentication in NestJs',\n    duration: '13:22',\n    seqNo: 8,\n    courseId: 14,\n  },\n  68: {\n    id: 68,\n    description: 'Authorization in NestJs',\n    duration: '6:43',\n    seqNo: 9,\n    courseId: 14,\n  },\n  69: {\n    id: 69,\n    description: 'Guards & Interceptors',\n    duration: '8:16',\n    seqNo: 10,\n    courseId: 14,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  1: {\n    id: 1,\n    email: 'test@angular-university.io',\n    password: 'test',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/courses/schemas/courses.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        coursesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  seqNum: {\n    type: Number,\n    required: true,\n  },\n  url: String,\n  iconUrl: String,\n  courseListIcon: String,\n  description: String,\n  longDescription: String,\n  category: String,\n  lessonsCount: String,\n  promo: Boolean,\n})\n                    \n                \n\n\n        \n    \n\n    src/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'secretKey',\n}\n                    \n                \n\n\n        \n    \n\n    src/courses/schemas/lessons.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lessonsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  description: String,\n  SeqNo: Number,\n  duration: String,\n  course: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Course',\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MONGO_CONNECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mongodb://localhost:27017/nestjs-course'\n                    \n                \n\n\n        \n    \n\n    src/auth/schemas/users.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UsersSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  userName: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  roles: {\n    type: [String],\n    default: ['user'],\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
